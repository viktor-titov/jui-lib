// Copyright (c) 2017 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import deepFreeze from 'deep-freeze';
import { FALLBACK_DAG_MAX_NUM_SERVICES } from './index';
export default deepFreeze(Object.defineProperty({
  archiveEnabled: false,
  dependencies: {
    dagMaxNumServices: FALLBACK_DAG_MAX_NUM_SERVICES,
    menuEnabled: true
  },
  linkPatterns: [],
  menu: [{
    label: 'About Jaeger',
    items: [{
      label: 'GitHub',
      url: 'https://github.com/uber/jaeger'
    }, {
      label: 'Docs',
      url: 'http://jaeger.readthedocs.io/en/latest/'
    }, {
      label: 'Twitter',
      url: 'https://twitter.com/JaegerTracing'
    }, {
      label: 'Discussion Group',
      url: 'https://groups.google.com/forum/#!forum/jaeger-tracing'
    }, {
      label: 'Gitter.im',
      url: 'https://gitter.im/jaegertracing/Lobby'
    }, {
      label: 'Blog',
      url: 'https://medium.com/jaegertracing/'
    }]
  }],
  search: {
    maxLookback: {
      label: '2 Days',
      value: '2d'
    },
    maxLimit: 1500
  },
  tracking: {
    gaID: null,
    trackErrors: true
  }
},
// fields that should be individually merged vs wholesale replaced
'__mergeFields', {
  value: ['dependencies', 'search', 'tracking']
}));
export var deprecations = [{
  formerKey: 'dependenciesMenuEnabled',
  currentKey: 'dependencies.menuEnabled'
}, {
  formerKey: 'gaTrackingID',
  currentKey: 'tracking.gaID'
}];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZWVwRnJlZXplIiwiRkFMTEJBQ0tfREFHX01BWF9OVU1fU0VSVklDRVMiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImFyY2hpdmVFbmFibGVkIiwiZGVwZW5kZW5jaWVzIiwiZGFnTWF4TnVtU2VydmljZXMiLCJtZW51RW5hYmxlZCIsImxpbmtQYXR0ZXJucyIsIm1lbnUiLCJsYWJlbCIsIml0ZW1zIiwidXJsIiwic2VhcmNoIiwibWF4TG9va2JhY2siLCJ2YWx1ZSIsIm1heExpbWl0IiwidHJhY2tpbmciLCJnYUlEIiwidHJhY2tFcnJvcnMiLCJkZXByZWNhdGlvbnMiLCJmb3JtZXJLZXkiLCJjdXJyZW50S2V5Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xpYi9jb25zdGFudHMvZGVmYXVsdC1jb25maWcudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxNyBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG5pbXBvcnQgZGVlcEZyZWV6ZSBmcm9tICdkZWVwLWZyZWV6ZSc7XG5cbmltcG9ydCB7IEZBTExCQUNLX0RBR19NQVhfTlVNX1NFUlZJQ0VTIH0gZnJvbSAnLi9pbmRleCc7XG5cbmV4cG9ydCBkZWZhdWx0IGRlZXBGcmVlemUoXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShcbiAgICB7XG4gICAgICBhcmNoaXZlRW5hYmxlZDogZmFsc2UsXG4gICAgICBkZXBlbmRlbmNpZXM6IHtcbiAgICAgICAgZGFnTWF4TnVtU2VydmljZXM6IEZBTExCQUNLX0RBR19NQVhfTlVNX1NFUlZJQ0VTLFxuICAgICAgICBtZW51RW5hYmxlZDogdHJ1ZSxcbiAgICAgIH0sXG4gICAgICBsaW5rUGF0dGVybnM6IFtdLFxuICAgICAgbWVudTogW1xuICAgICAgICB7XG4gICAgICAgICAgbGFiZWw6ICdBYm91dCBKYWVnZXInLFxuICAgICAgICAgIGl0ZW1zOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGxhYmVsOiAnR2l0SHViJyxcbiAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly9naXRodWIuY29tL3ViZXIvamFlZ2VyJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGxhYmVsOiAnRG9jcycsXG4gICAgICAgICAgICAgIHVybDogJ2h0dHA6Ly9qYWVnZXIucmVhZHRoZWRvY3MuaW8vZW4vbGF0ZXN0LycsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBsYWJlbDogJ1R3aXR0ZXInLFxuICAgICAgICAgICAgICB1cmw6ICdodHRwczovL3R3aXR0ZXIuY29tL0phZWdlclRyYWNpbmcnLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbGFiZWw6ICdEaXNjdXNzaW9uIEdyb3VwJyxcbiAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly9ncm91cHMuZ29vZ2xlLmNvbS9mb3J1bS8jIWZvcnVtL2phZWdlci10cmFjaW5nJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGxhYmVsOiAnR2l0dGVyLmltJyxcbiAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly9naXR0ZXIuaW0vamFlZ2VydHJhY2luZy9Mb2JieScsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBsYWJlbDogJ0Jsb2cnLFxuICAgICAgICAgICAgICB1cmw6ICdodHRwczovL21lZGl1bS5jb20vamFlZ2VydHJhY2luZy8nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICAgIHNlYXJjaDoge1xuICAgICAgICBtYXhMb29rYmFjazoge1xuICAgICAgICAgIGxhYmVsOiAnMiBEYXlzJyxcbiAgICAgICAgICB2YWx1ZTogJzJkJyxcbiAgICAgICAgfSxcbiAgICAgICAgbWF4TGltaXQ6IDE1MDAsXG4gICAgICB9LFxuICAgICAgdHJhY2tpbmc6IHtcbiAgICAgICAgZ2FJRDogbnVsbCxcbiAgICAgICAgdHJhY2tFcnJvcnM6IHRydWUsXG4gICAgICB9LFxuICAgIH0sXG4gICAgLy8gZmllbGRzIHRoYXQgc2hvdWxkIGJlIGluZGl2aWR1YWxseSBtZXJnZWQgdnMgd2hvbGVzYWxlIHJlcGxhY2VkXG4gICAgJ19fbWVyZ2VGaWVsZHMnLFxuICAgIHsgdmFsdWU6IFsnZGVwZW5kZW5jaWVzJywgJ3NlYXJjaCcsICd0cmFja2luZyddIH1cbiAgKVxuKTtcblxuZXhwb3J0IGNvbnN0IGRlcHJlY2F0aW9ucyA9IFtcbiAge1xuICAgIGZvcm1lcktleTogJ2RlcGVuZGVuY2llc01lbnVFbmFibGVkJyxcbiAgICBjdXJyZW50S2V5OiAnZGVwZW5kZW5jaWVzLm1lbnVFbmFibGVkJyxcbiAgfSxcbiAge1xuICAgIGZvcm1lcktleTogJ2dhVHJhY2tpbmdJRCcsXG4gICAgY3VycmVudEtleTogJ3RyYWNraW5nLmdhSUQnLFxuICB9LFxuXTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsVUFBVSxNQUFNLGFBQWE7QUFFcEMsU0FBU0MsNkJBQTZCLFFBQVEsU0FBUztBQUV2RCxlQUFlRCxVQUFVLENBQ3ZCRSxNQUFNLENBQUNDLGNBQWMsQ0FDbkI7RUFDRUMsY0FBYyxFQUFFLEtBQUs7RUFDckJDLFlBQVksRUFBRTtJQUNaQyxpQkFBaUIsRUFBRUwsNkJBQTZCO0lBQ2hETSxXQUFXLEVBQUU7RUFDZixDQUFDO0VBQ0RDLFlBQVksRUFBRSxFQUFFO0VBQ2hCQyxJQUFJLEVBQUUsQ0FDSjtJQUNFQyxLQUFLLEVBQUUsY0FBYztJQUNyQkMsS0FBSyxFQUFFLENBQ0w7TUFDRUQsS0FBSyxFQUFFLFFBQVE7TUFDZkUsR0FBRyxFQUFFO0lBQ1AsQ0FBQyxFQUNEO01BQ0VGLEtBQUssRUFBRSxNQUFNO01BQ2JFLEdBQUcsRUFBRTtJQUNQLENBQUMsRUFDRDtNQUNFRixLQUFLLEVBQUUsU0FBUztNQUNoQkUsR0FBRyxFQUFFO0lBQ1AsQ0FBQyxFQUNEO01BQ0VGLEtBQUssRUFBRSxrQkFBa0I7TUFDekJFLEdBQUcsRUFBRTtJQUNQLENBQUMsRUFDRDtNQUNFRixLQUFLLEVBQUUsV0FBVztNQUNsQkUsR0FBRyxFQUFFO0lBQ1AsQ0FBQyxFQUNEO01BQ0VGLEtBQUssRUFBRSxNQUFNO01BQ2JFLEdBQUcsRUFBRTtJQUNQLENBQUM7RUFFTCxDQUFDLENBQ0Y7RUFDREMsTUFBTSxFQUFFO0lBQ05DLFdBQVcsRUFBRTtNQUNYSixLQUFLLEVBQUUsUUFBUTtNQUNmSyxLQUFLLEVBQUU7SUFDVCxDQUFDO0lBQ0RDLFFBQVEsRUFBRTtFQUNaLENBQUM7RUFDREMsUUFBUSxFQUFFO0lBQ1JDLElBQUksRUFBRSxJQUFJO0lBQ1ZDLFdBQVcsRUFBRTtFQUNmO0FBQ0YsQ0FBQztBQUNEO0FBQ0EsZUFBZSxFQUNmO0VBQUVKLEtBQUssRUFBRSxDQUFDLGNBQWMsRUFBRSxRQUFRLEVBQUUsVUFBVTtBQUFFLENBQ2xELENBQ0YsQ0FBQztBQUVELE9BQU8sSUFBTUssWUFBWSxHQUFHLENBQzFCO0VBQ0VDLFNBQVMsRUFBRSx5QkFBeUI7RUFDcENDLFVBQVUsRUFBRTtBQUNkLENBQUMsRUFDRDtFQUNFRCxTQUFTLEVBQUUsY0FBYztFQUN6QkMsVUFBVSxFQUFFO0FBQ2QsQ0FBQyxDQUNGIiwiaWdub3JlTGlzdCI6W119