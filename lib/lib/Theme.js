// Copyright (c) 2017 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import tinycolor from 'tinycolor2';
/**
 * Tries to get a dark variant color. Either by simply inverting the luminosity and darkening or lightening the color
 * a bit, or if base is provided, tries 2 variants of lighter and darker colors and checks which is more readable with
 * the base.
 * @param theme
 * @param hex
 * @param base
 */
export function autoColor(theme, hex, base) {
  if (theme.isLight) {
    return hex;
  } else {
    if (base) {
      var _color = tinycolor(hex);
      return tinycolor.mostReadable(base, [_color.clone().lighten(25), _color.clone().lighten(10), _color, _color.clone().darken(10), _color.clone().darken(25)], {
        includeFallbackColors: false
      }).toHex8String();
    }
    var color = tinycolor(hex).toHsl();
    color.l = 1 - color.l;
    var newColor = tinycolor(color);
    return newColor.isLight() ? newColor.darken(5).toHex8String() : newColor.lighten(5).toHex8String();
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ0aW55Y29sb3IiLCJhdXRvQ29sb3IiLCJ0aGVtZSIsImhleCIsImJhc2UiLCJpc0xpZ2h0IiwiY29sb3IiLCJtb3N0UmVhZGFibGUiLCJjbG9uZSIsImxpZ2h0ZW4iLCJkYXJrZW4iLCJpbmNsdWRlRmFsbGJhY2tDb2xvcnMiLCJ0b0hleDhTdHJpbmciLCJ0b0hzbCIsImwiLCJuZXdDb2xvciJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvVGhlbWUudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxNyBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG5pbXBvcnQgdGlueWNvbG9yIGZyb20gJ3Rpbnljb2xvcjInO1xuXG5pbXBvcnQgeyBHcmFmYW5hVGhlbWUyIH0gZnJvbSAnQGdyYWZhbmEvZGF0YSc7XG5cbi8qKlxuICogVHJpZXMgdG8gZ2V0IGEgZGFyayB2YXJpYW50IGNvbG9yLiBFaXRoZXIgYnkgc2ltcGx5IGludmVydGluZyB0aGUgbHVtaW5vc2l0eSBhbmQgZGFya2VuaW5nIG9yIGxpZ2h0ZW5pbmcgdGhlIGNvbG9yXG4gKiBhIGJpdCwgb3IgaWYgYmFzZSBpcyBwcm92aWRlZCwgdHJpZXMgMiB2YXJpYW50cyBvZiBsaWdodGVyIGFuZCBkYXJrZXIgY29sb3JzIGFuZCBjaGVja3Mgd2hpY2ggaXMgbW9yZSByZWFkYWJsZSB3aXRoXG4gKiB0aGUgYmFzZS5cbiAqIEBwYXJhbSB0aGVtZVxuICogQHBhcmFtIGhleFxuICogQHBhcmFtIGJhc2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGF1dG9Db2xvcih0aGVtZTogR3JhZmFuYVRoZW1lMiwgaGV4OiBzdHJpbmcsIGJhc2U/OiBzdHJpbmcpIHtcbiAgaWYgKHRoZW1lLmlzTGlnaHQpIHtcbiAgICByZXR1cm4gaGV4O1xuICB9IGVsc2Uge1xuICAgIGlmIChiYXNlKSB7XG4gICAgICBjb25zdCBjb2xvciA9IHRpbnljb2xvcihoZXgpO1xuICAgICAgcmV0dXJuIHRpbnljb2xvclxuICAgICAgICAubW9zdFJlYWRhYmxlKFxuICAgICAgICAgIGJhc2UsXG4gICAgICAgICAgW1xuICAgICAgICAgICAgY29sb3IuY2xvbmUoKS5saWdodGVuKDI1KSxcbiAgICAgICAgICAgIGNvbG9yLmNsb25lKCkubGlnaHRlbigxMCksXG4gICAgICAgICAgICBjb2xvcixcbiAgICAgICAgICAgIGNvbG9yLmNsb25lKCkuZGFya2VuKDEwKSxcbiAgICAgICAgICAgIGNvbG9yLmNsb25lKCkuZGFya2VuKDI1KSxcbiAgICAgICAgICBdLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGluY2x1ZGVGYWxsYmFja0NvbG9yczogZmFsc2UsXG4gICAgICAgICAgfVxuICAgICAgICApXG4gICAgICAgIC50b0hleDhTdHJpbmcoKTtcbiAgICB9XG4gICAgY29uc3QgY29sb3IgPSB0aW55Y29sb3IoaGV4KS50b0hzbCgpO1xuICAgIGNvbG9yLmwgPSAxIC0gY29sb3IubDtcbiAgICBjb25zdCBuZXdDb2xvciA9IHRpbnljb2xvcihjb2xvcik7XG4gICAgcmV0dXJuIG5ld0NvbG9yLmlzTGlnaHQoKSA/IG5ld0NvbG9yLmRhcmtlbig1KS50b0hleDhTdHJpbmcoKSA6IG5ld0NvbG9yLmxpZ2h0ZW4oNSkudG9IZXg4U3RyaW5nKCk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsU0FBUyxNQUFNLFlBQVk7QUFJbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sU0FBU0MsU0FBU0EsQ0FBQ0MsS0FBb0IsRUFBRUMsR0FBVyxFQUFFQyxJQUFhLEVBQUU7RUFDMUUsSUFBSUYsS0FBSyxDQUFDRyxPQUFPLEVBQUU7SUFDakIsT0FBT0YsR0FBRztFQUNaLENBQUMsTUFBTTtJQUNMLElBQUlDLElBQUksRUFBRTtNQUNSLElBQU1FLE1BQUssR0FBR04sU0FBUyxDQUFDRyxHQUFHLENBQUM7TUFDNUIsT0FBT0gsU0FBUyxDQUNiTyxZQUFZLENBQ1hILElBQUksRUFDSixDQUNFRSxNQUFLLENBQUNFLEtBQUssQ0FBQyxDQUFDLENBQUNDLE9BQU8sQ0FBQyxFQUFFLENBQUMsRUFDekJILE1BQUssQ0FBQ0UsS0FBSyxDQUFDLENBQUMsQ0FBQ0MsT0FBTyxDQUFDLEVBQUUsQ0FBQyxFQUN6QkgsTUFBSyxFQUNMQSxNQUFLLENBQUNFLEtBQUssQ0FBQyxDQUFDLENBQUNFLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFDeEJKLE1BQUssQ0FBQ0UsS0FBSyxDQUFDLENBQUMsQ0FBQ0UsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUN6QixFQUNEO1FBQ0VDLHFCQUFxQixFQUFFO01BQ3pCLENBQ0YsQ0FBQyxDQUNBQyxZQUFZLENBQUMsQ0FBQztJQUNuQjtJQUNBLElBQU1OLEtBQUssR0FBR04sU0FBUyxDQUFDRyxHQUFHLENBQUMsQ0FBQ1UsS0FBSyxDQUFDLENBQUM7SUFDcENQLEtBQUssQ0FBQ1EsQ0FBQyxHQUFHLENBQUMsR0FBR1IsS0FBSyxDQUFDUSxDQUFDO0lBQ3JCLElBQU1DLFFBQVEsR0FBR2YsU0FBUyxDQUFDTSxLQUFLLENBQUM7SUFDakMsT0FBT1MsUUFBUSxDQUFDVixPQUFPLENBQUMsQ0FBQyxHQUFHVSxRQUFRLENBQUNMLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQ0UsWUFBWSxDQUFDLENBQUMsR0FBR0csUUFBUSxDQUFDTixPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUNHLFlBQVksQ0FBQyxDQUFDO0VBQ3BHO0FBQ0YiLCJpZ25vcmVMaXN0IjpbXX0=