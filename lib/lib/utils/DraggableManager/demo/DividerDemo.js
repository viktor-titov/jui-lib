import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
// Copyright (c) 2017 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import React from 'react';
import DraggableManager from '../DraggableManager';
import './DividerDemo.css';
import { jsx as _jsx } from "react/jsx-runtime";
var DividerDemo = /*#__PURE__*/function (_React$PureComponent) {
  function DividerDemo(props) {
    var _this;
    _this = _React$PureComponent.call(this, props) || this;
    _this._setRealm = function (elm) {
      _this._realmElm = elm;
    };
    _this._getDraggingBounds = function () {
      if (!_this._realmElm) {
        throw new Error('invalid state');
      }
      var _this$_realmElm$getBo = _this._realmElm.getBoundingClientRect(),
        clientXLeft = _this$_realmElm$getBo.left,
        width = _this$_realmElm$getBo.width;
      return {
        clientXLeft: clientXLeft,
        width: width,
        maxValue: 0.98,
        minValue: 0.02
      };
    };
    _this._handleDragEvent = function (_ref) {
      var value = _ref.value;
      _this.props.updateState({
        dividerPosition: value
      });
    };
    _this._realmElm = null;
    _this._dragManager = new DraggableManager({
      getBounds: _this._getDraggingBounds,
      onDragEnd: _this._handleDragEvent,
      onDragMove: _this._handleDragEvent,
      onDragStart: _this._handleDragEvent
    });
    return _this;
  }
  _inheritsLoose(DividerDemo, _React$PureComponent);
  var _proto = DividerDemo.prototype;
  _proto.render = function render() {
    var position = this.props.position;
    var style = {
      left: position * 100 + "%"
    };
    return /*#__PURE__*/_jsx("div", {
      className: "DividerDemo--realm",
      ref: this._setRealm,
      children: /*#__PURE__*/_jsx("div", {
        "aria-hidden": true,
        className: "DividerDemo--divider",
        onMouseDown: this._dragManager.handleMouseDown,
        style: style
      })
    });
  };
  return DividerDemo;
}(React.PureComponent);
export { DividerDemo as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIkRyYWdnYWJsZU1hbmFnZXIiLCJqc3giLCJfanN4IiwiRGl2aWRlckRlbW8iLCJfUmVhY3QkUHVyZUNvbXBvbmVudCIsInByb3BzIiwiX3RoaXMiLCJjYWxsIiwiX3NldFJlYWxtIiwiZWxtIiwiX3JlYWxtRWxtIiwiX2dldERyYWdnaW5nQm91bmRzIiwiRXJyb3IiLCJfdGhpcyRfcmVhbG1FbG0kZ2V0Qm8iLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJjbGllbnRYTGVmdCIsImxlZnQiLCJ3aWR0aCIsIm1heFZhbHVlIiwibWluVmFsdWUiLCJfaGFuZGxlRHJhZ0V2ZW50IiwiX3JlZiIsInZhbHVlIiwidXBkYXRlU3RhdGUiLCJkaXZpZGVyUG9zaXRpb24iLCJfZHJhZ01hbmFnZXIiLCJnZXRCb3VuZHMiLCJvbkRyYWdFbmQiLCJvbkRyYWdNb3ZlIiwib25EcmFnU3RhcnQiLCJfaW5oZXJpdHNMb29zZSIsIl9wcm90byIsInByb3RvdHlwZSIsInJlbmRlciIsInBvc2l0aW9uIiwic3R5bGUiLCJjbGFzc05hbWUiLCJyZWYiLCJjaGlsZHJlbiIsIm9uTW91c2VEb3duIiwiaGFuZGxlTW91c2VEb3duIiwiUHVyZUNvbXBvbmVudCIsImRlZmF1bHQiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL3V0aWxzL0RyYWdnYWJsZU1hbmFnZXIvZGVtby9EaXZpZGVyRGVtby50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDE3IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IERyYWdnYWJsZUJvdW5kcywgRHJhZ2dpbmdVcGRhdGUgfSBmcm9tICcuLic7XG5pbXBvcnQgVE5pbCBmcm9tICcuLi8uLi8uLi90eXBlcy9UTmlsJztcbmltcG9ydCBEcmFnZ2FibGVNYW5hZ2VyIGZyb20gJy4uL0RyYWdnYWJsZU1hbmFnZXInO1xuXG5pbXBvcnQgJy4vRGl2aWRlckRlbW8uY3NzJztcblxudHlwZSBEaXZpZGVyRGVtb1Byb3BzID0ge1xuICBwb3NpdGlvbjogbnVtYmVyO1xuICB1cGRhdGVTdGF0ZTogKHVwZGF0ZTogeyBkaXZpZGVyUG9zaXRpb246IG51bWJlciB9KSA9PiB2b2lkO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGl2aWRlckRlbW8gZXh0ZW5kcyBSZWFjdC5QdXJlQ29tcG9uZW50PERpdmlkZXJEZW1vUHJvcHM+IHtcbiAgX2RyYWdNYW5hZ2VyOiBEcmFnZ2FibGVNYW5hZ2VyO1xuXG4gIF9yZWFsbUVsbTogSFRNTEVsZW1lbnQgfCBUTmlsO1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzOiBEaXZpZGVyRGVtb1Byb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuXG4gICAgdGhpcy5fcmVhbG1FbG0gPSBudWxsO1xuXG4gICAgdGhpcy5fZHJhZ01hbmFnZXIgPSBuZXcgRHJhZ2dhYmxlTWFuYWdlcih7XG4gICAgICBnZXRCb3VuZHM6IHRoaXMuX2dldERyYWdnaW5nQm91bmRzLFxuICAgICAgb25EcmFnRW5kOiB0aGlzLl9oYW5kbGVEcmFnRXZlbnQsXG4gICAgICBvbkRyYWdNb3ZlOiB0aGlzLl9oYW5kbGVEcmFnRXZlbnQsXG4gICAgICBvbkRyYWdTdGFydDogdGhpcy5faGFuZGxlRHJhZ0V2ZW50LFxuICAgIH0pO1xuICB9XG5cbiAgX3NldFJlYWxtID0gKGVsbTogSFRNTEVsZW1lbnQgfCBUTmlsKSA9PiB7XG4gICAgdGhpcy5fcmVhbG1FbG0gPSBlbG07XG4gIH07XG5cbiAgX2dldERyYWdnaW5nQm91bmRzID0gKCk6IERyYWdnYWJsZUJvdW5kcyA9PiB7XG4gICAgaWYgKCF0aGlzLl9yZWFsbUVsbSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIHN0YXRlJyk7XG4gICAgfVxuICAgIGNvbnN0IHsgbGVmdDogY2xpZW50WExlZnQsIHdpZHRoIH0gPSB0aGlzLl9yZWFsbUVsbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICByZXR1cm4ge1xuICAgICAgY2xpZW50WExlZnQsXG4gICAgICB3aWR0aCxcbiAgICAgIG1heFZhbHVlOiAwLjk4LFxuICAgICAgbWluVmFsdWU6IDAuMDIsXG4gICAgfTtcbiAgfTtcblxuICBfaGFuZGxlRHJhZ0V2ZW50ID0gKHsgdmFsdWUgfTogRHJhZ2dpbmdVcGRhdGUpID0+IHtcbiAgICB0aGlzLnByb3BzLnVwZGF0ZVN0YXRlKHsgZGl2aWRlclBvc2l0aW9uOiB2YWx1ZSB9KTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBwb3NpdGlvbiB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBzdHlsZSA9IHsgbGVmdDogYCR7cG9zaXRpb24gKiAxMDB9JWAgfTtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJEaXZpZGVyRGVtby0tcmVhbG1cIiByZWY9e3RoaXMuX3NldFJlYWxtfT5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGFyaWEtaGlkZGVuXG4gICAgICAgICAgY2xhc3NOYW1lPVwiRGl2aWRlckRlbW8tLWRpdmlkZXJcIlxuICAgICAgICAgIG9uTW91c2VEb3duPXt0aGlzLl9kcmFnTWFuYWdlci5oYW5kbGVNb3VzZURvd259XG4gICAgICAgICAgc3R5bGU9e3N0eWxlfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsT0FBT0EsS0FBSyxNQUFNLE9BQU87QUFJekIsT0FBT0MsZ0JBQWdCLE1BQU0scUJBQXFCO0FBRWxELE9BQU8sbUJBQW1CO0FBQUMsU0FBQUMsR0FBQSxJQUFBQyxJQUFBO0FBQUEsSUFPTkMsV0FBVywwQkFBQUMsb0JBQUE7RUFLOUIsU0FBQUQsWUFBWUUsS0FBdUIsRUFBRTtJQUFBLElBQUFDLEtBQUE7SUFDbkNBLEtBQUEsR0FBQUYsb0JBQUEsQ0FBQUcsSUFBQSxPQUFNRixLQUFLLENBQUM7SUFBQ0MsS0FBQSxDQVlmRSxTQUFTLEdBQUcsVUFBQ0MsR0FBdUIsRUFBSztNQUN2Q0gsS0FBQSxDQUFLSSxTQUFTLEdBQUdELEdBQUc7SUFDdEIsQ0FBQztJQUFBSCxLQUFBLENBRURLLGtCQUFrQixHQUFHLFlBQXVCO01BQzFDLElBQUksQ0FBQ0wsS0FBQSxDQUFLSSxTQUFTLEVBQUU7UUFDbkIsTUFBTSxJQUFJRSxLQUFLLENBQUMsZUFBZSxDQUFDO01BQ2xDO01BQ0EsSUFBQUMscUJBQUEsR0FBcUNQLEtBQUEsQ0FBS0ksU0FBUyxDQUFDSSxxQkFBcUIsQ0FBQyxDQUFDO1FBQTdEQyxXQUFXLEdBQUFGLHFCQUFBLENBQWpCRyxJQUFJO1FBQWVDLEtBQUssR0FBQUoscUJBQUEsQ0FBTEksS0FBSztNQUNoQyxPQUFPO1FBQ0xGLFdBQVcsRUFBWEEsV0FBVztRQUNYRSxLQUFLLEVBQUxBLEtBQUs7UUFDTEMsUUFBUSxFQUFFLElBQUk7UUFDZEMsUUFBUSxFQUFFO01BQ1osQ0FBQztJQUNILENBQUM7SUFBQWIsS0FBQSxDQUVEYyxnQkFBZ0IsR0FBRyxVQUFBQyxJQUFBLEVBQStCO01BQUEsSUFBNUJDLEtBQUssR0FBQUQsSUFBQSxDQUFMQyxLQUFLO01BQ3pCaEIsS0FBQSxDQUFLRCxLQUFLLENBQUNrQixXQUFXLENBQUM7UUFBRUMsZUFBZSxFQUFFRjtNQUFNLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBN0JDaEIsS0FBQSxDQUFLSSxTQUFTLEdBQUcsSUFBSTtJQUVyQkosS0FBQSxDQUFLbUIsWUFBWSxHQUFHLElBQUl6QixnQkFBZ0IsQ0FBQztNQUN2QzBCLFNBQVMsRUFBRXBCLEtBQUEsQ0FBS0ssa0JBQWtCO01BQ2xDZ0IsU0FBUyxFQUFFckIsS0FBQSxDQUFLYyxnQkFBZ0I7TUFDaENRLFVBQVUsRUFBRXRCLEtBQUEsQ0FBS2MsZ0JBQWdCO01BQ2pDUyxXQUFXLEVBQUV2QixLQUFBLENBQUtjO0lBQ3BCLENBQUMsQ0FBQztJQUFDLE9BQUFkLEtBQUE7RUFDTDtFQUFDd0IsY0FBQSxDQUFBM0IsV0FBQSxFQUFBQyxvQkFBQTtFQUFBLElBQUEyQixNQUFBLEdBQUE1QixXQUFBLENBQUE2QixTQUFBO0VBQUFELE1BQUEsQ0F1QkRFLE1BQU0sR0FBTixTQUFBQSxPQUFBLEVBQVM7SUFDUCxJQUFRQyxRQUFRLEdBQUssSUFBSSxDQUFDN0IsS0FBSyxDQUF2QjZCLFFBQVE7SUFDaEIsSUFBTUMsS0FBSyxHQUFHO01BQUVuQixJQUFJLEVBQUtrQixRQUFRLEdBQUcsR0FBRztJQUFJLENBQUM7SUFDNUMsb0JBQ0VoQyxJQUFBO01BQUtrQyxTQUFTLEVBQUMsb0JBQW9CO01BQUNDLEdBQUcsRUFBRSxJQUFJLENBQUM3QixTQUFVO01BQUE4QixRQUFBLGVBQ3REcEMsSUFBQTtRQUNFLG1CQUFXO1FBQ1hrQyxTQUFTLEVBQUMsc0JBQXNCO1FBQ2hDRyxXQUFXLEVBQUUsSUFBSSxDQUFDZCxZQUFZLENBQUNlLGVBQWdCO1FBQy9DTCxLQUFLLEVBQUVBO01BQU0sQ0FDZDtJQUFDLENBQ0MsQ0FBQztFQUVWLENBQUM7RUFBQSxPQUFBaEMsV0FBQTtBQUFBLEVBcERzQ0osS0FBSyxDQUFDMEMsYUFBYTtBQUFBLFNBQXZDdEMsV0FBVyxJQUFBdUMsT0FBQSIsImlnbm9yZUxpc3QiOltdfQ==