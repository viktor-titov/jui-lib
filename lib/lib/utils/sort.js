// Copyright (c) 2017 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

export function localeStringComparator(itemA, itemB) {
  return itemA.localeCompare(itemB);
}
export function numberSortComparator(itemA, itemB) {
  return itemA - itemB;
}
export function classNameForSortDir(dir) {
  return "sorted " + (dir === 1 ? 'ascending' : 'descending');
}
export function getNewSortForClick(prevSort, column) {
  var _column$defaultDir = column.defaultDir,
    defaultDir = _column$defaultDir === void 0 ? 1 : _column$defaultDir;
  return {
    key: column.name,
    dir: prevSort.key === column.name ? -1 * prevSort.dir : defaultDir
  };
}
export function createSortClickHandler(column, currentSortKey, currentSortDir, updateSort) {
  return function onClickSortingElement() {
    var _getNewSortForClick = getNewSortForClick({
        key: currentSortKey,
        dir: currentSortDir
      }, column),
      key = _getNewSortForClick.key,
      dir = _getNewSortForClick.dir;
    updateSort(key, dir);
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJsb2NhbGVTdHJpbmdDb21wYXJhdG9yIiwiaXRlbUEiLCJpdGVtQiIsImxvY2FsZUNvbXBhcmUiLCJudW1iZXJTb3J0Q29tcGFyYXRvciIsImNsYXNzTmFtZUZvclNvcnREaXIiLCJkaXIiLCJnZXROZXdTb3J0Rm9yQ2xpY2siLCJwcmV2U29ydCIsImNvbHVtbiIsIl9jb2x1bW4kZGVmYXVsdERpciIsImRlZmF1bHREaXIiLCJrZXkiLCJuYW1lIiwiY3JlYXRlU29ydENsaWNrSGFuZGxlciIsImN1cnJlbnRTb3J0S2V5IiwiY3VycmVudFNvcnREaXIiLCJ1cGRhdGVTb3J0Iiwib25DbGlja1NvcnRpbmdFbGVtZW50IiwiX2dldE5ld1NvcnRGb3JDbGljayJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvdXRpbHMvc29ydC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMTcgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuaW1wb3J0IHNpbm9uIGZyb20gJ3Npbm9uJztcblxuZXhwb3J0IGZ1bmN0aW9uIGxvY2FsZVN0cmluZ0NvbXBhcmF0b3IoaXRlbUE6IHN0cmluZywgaXRlbUI6IHN0cmluZykge1xuICByZXR1cm4gaXRlbUEubG9jYWxlQ29tcGFyZShpdGVtQik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBudW1iZXJTb3J0Q29tcGFyYXRvcihpdGVtQTogbnVtYmVyLCBpdGVtQjogbnVtYmVyKSB7XG4gIHJldHVybiBpdGVtQSAtIGl0ZW1CO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2xhc3NOYW1lRm9yU29ydERpcihkaXI6IG51bWJlcikge1xuICByZXR1cm4gYHNvcnRlZCAke2RpciA9PT0gMSA/ICdhc2NlbmRpbmcnIDogJ2Rlc2NlbmRpbmcnfWA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXROZXdTb3J0Rm9yQ2xpY2soXG4gIHByZXZTb3J0OiB7IGtleTogc3RyaW5nOyBkaXI6IG51bWJlciB9LFxuICBjb2x1bW46IHsgbmFtZTogc3RyaW5nOyBkZWZhdWx0RGlyPzogbnVtYmVyIH1cbikge1xuICBjb25zdCB7IGRlZmF1bHREaXIgPSAxIH0gPSBjb2x1bW47XG5cbiAgcmV0dXJuIHtcbiAgICBrZXk6IGNvbHVtbi5uYW1lLFxuICAgIGRpcjogcHJldlNvcnQua2V5ID09PSBjb2x1bW4ubmFtZSA/IC0xICogcHJldlNvcnQuZGlyIDogZGVmYXVsdERpcixcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNvcnRDbGlja0hhbmRsZXIoXG4gIGNvbHVtbjogeyBuYW1lOiBzdHJpbmcgfSxcbiAgY3VycmVudFNvcnRLZXk6IHN0cmluZyxcbiAgY3VycmVudFNvcnREaXI6IG51bWJlcixcbiAgdXBkYXRlU29ydDogc2lub24uU2lub25TcHlcbikge1xuICByZXR1cm4gZnVuY3Rpb24gb25DbGlja1NvcnRpbmdFbGVtZW50KCkge1xuICAgIGNvbnN0IHsga2V5LCBkaXIgfSA9IGdldE5ld1NvcnRGb3JDbGljayh7IGtleTogY3VycmVudFNvcnRLZXksIGRpcjogY3VycmVudFNvcnREaXIgfSwgY29sdW1uKTtcbiAgICB1cGRhdGVTb3J0KGtleSwgZGlyKTtcbiAgfTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBSUEsT0FBTyxTQUFTQSxzQkFBc0JBLENBQUNDLEtBQWEsRUFBRUMsS0FBYSxFQUFFO0VBQ25FLE9BQU9ELEtBQUssQ0FBQ0UsYUFBYSxDQUFDRCxLQUFLLENBQUM7QUFDbkM7QUFFQSxPQUFPLFNBQVNFLG9CQUFvQkEsQ0FBQ0gsS0FBYSxFQUFFQyxLQUFhLEVBQUU7RUFDakUsT0FBT0QsS0FBSyxHQUFHQyxLQUFLO0FBQ3RCO0FBRUEsT0FBTyxTQUFTRyxtQkFBbUJBLENBQUNDLEdBQVcsRUFBRTtFQUMvQyxvQkFBaUJBLEdBQUcsS0FBSyxDQUFDLEdBQUcsV0FBVyxHQUFHLFlBQVk7QUFDekQ7QUFFQSxPQUFPLFNBQVNDLGtCQUFrQkEsQ0FDaENDLFFBQXNDLEVBQ3RDQyxNQUE2QyxFQUM3QztFQUNBLElBQUFDLGtCQUFBLEdBQTJCRCxNQUFNLENBQXpCRSxVQUFVO0lBQVZBLFVBQVUsR0FBQUQsa0JBQUEsY0FBRyxDQUFDLEdBQUFBLGtCQUFBO0VBRXRCLE9BQU87SUFDTEUsR0FBRyxFQUFFSCxNQUFNLENBQUNJLElBQUk7SUFDaEJQLEdBQUcsRUFBRUUsUUFBUSxDQUFDSSxHQUFHLEtBQUtILE1BQU0sQ0FBQ0ksSUFBSSxHQUFHLENBQUMsQ0FBQyxHQUFHTCxRQUFRLENBQUNGLEdBQUcsR0FBR0s7RUFDMUQsQ0FBQztBQUNIO0FBRUEsT0FBTyxTQUFTRyxzQkFBc0JBLENBQ3BDTCxNQUF3QixFQUN4Qk0sY0FBc0IsRUFDdEJDLGNBQXNCLEVBQ3RCQyxVQUEwQixFQUMxQjtFQUNBLE9BQU8sU0FBU0MscUJBQXFCQSxDQUFBLEVBQUc7SUFDdEMsSUFBQUMsbUJBQUEsR0FBcUJaLGtCQUFrQixDQUFDO1FBQUVLLEdBQUcsRUFBRUcsY0FBYztRQUFFVCxHQUFHLEVBQUVVO01BQWUsQ0FBQyxFQUFFUCxNQUFNLENBQUM7TUFBckZHLEdBQUcsR0FBQU8sbUJBQUEsQ0FBSFAsR0FBRztNQUFFTixHQUFHLEdBQUFhLG1CQUFBLENBQUhiLEdBQUc7SUFDaEJXLFVBQVUsQ0FBQ0wsR0FBRyxFQUFFTixHQUFHLENBQUM7RUFDdEIsQ0FBQztBQUNIIiwiaWdub3JlTGlzdCI6W119