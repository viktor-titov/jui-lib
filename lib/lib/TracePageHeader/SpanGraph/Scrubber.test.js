import _extends from "@babel/runtime/helpers/extends";
// Copyright (c) 2017 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import { render, screen, fireEvent, within } from '@testing-library/react';
import React from 'react';
import Scrubber from './Scrubber';
import { jsx as _jsx } from "react/jsx-runtime";
describe('<Scrubber>', function () {
  var defaultProps = {
    position: 0
  };
  var rerender;
  beforeEach(function () {
    var _render = render( /*#__PURE__*/_jsx("svg", {
      children: /*#__PURE__*/_jsx(Scrubber, _extends({}, defaultProps))
    }));
    rerender = _render.rerender;
  });
  it('contains the proper svg components', function () {
    var scrubberComponent = screen.getByTestId('scrubber-component');
    var scrubberComponentG = screen.getByTestId('scrubber-component-g');
    expect(within(scrubberComponent).getByTestId('scrubber-component-g')).toBeTruthy();
    expect(within(scrubberComponent).getByTestId('scrubber-component-line')).toBeTruthy();
    expect(within(scrubberComponentG).getByTestId('scrubber-component-rect-1')).toBeTruthy();
    expect(within(scrubberComponentG).getByTestId('scrubber-component-rect-2')).toBeTruthy();
  });
  it('calculates the correct x% for a timestamp', function () {
    rerender( /*#__PURE__*/_jsx("svg", {
      children: /*#__PURE__*/_jsx(Scrubber, _extends({}, defaultProps, {
        position: 0.5
      }))
    }));
    var line = screen.getByTestId('scrubber-component-line');
    var rect = screen.getByTestId('scrubber-component-rect-1');
    expect(line).toHaveAttribute('x1', '50%');
    expect(line).toHaveAttribute('x2', '50%');
    expect(rect).toHaveAttribute('x', '50%');
  });
  it('supports onMouseDown', function () {
    expect(fireEvent.mouseDown(screen.getByTestId('scrubber-component-g'))).toBeTruthy();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZW5kZXIiLCJzY3JlZW4iLCJmaXJlRXZlbnQiLCJ3aXRoaW4iLCJSZWFjdCIsIlNjcnViYmVyIiwianN4IiwiX2pzeCIsImRlc2NyaWJlIiwiZGVmYXVsdFByb3BzIiwicG9zaXRpb24iLCJyZXJlbmRlciIsImJlZm9yZUVhY2giLCJfcmVuZGVyIiwiY2hpbGRyZW4iLCJfZXh0ZW5kcyIsIml0Iiwic2NydWJiZXJDb21wb25lbnQiLCJnZXRCeVRlc3RJZCIsInNjcnViYmVyQ29tcG9uZW50RyIsImV4cGVjdCIsInRvQmVUcnV0aHkiLCJsaW5lIiwicmVjdCIsInRvSGF2ZUF0dHJpYnV0ZSIsIm1vdXNlRG93biJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvVHJhY2VQYWdlSGVhZGVyL1NwYW5HcmFwaC9TY3J1YmJlci50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMTcgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuaW1wb3J0IHsgcmVuZGVyLCBzY3JlZW4sIGZpcmVFdmVudCwgd2l0aGluIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgU2NydWJiZXIsIHsgU2NydWJiZXJQcm9wcyB9IGZyb20gJy4vU2NydWJiZXInO1xuXG5kZXNjcmliZSgnPFNjcnViYmVyPicsICgpID0+IHtcbiAgY29uc3QgZGVmYXVsdFByb3BzID0ge1xuICAgIHBvc2l0aW9uOiAwLFxuICB9O1xuXG4gIGxldCByZXJlbmRlcjogKGFyZzA6IEpTWC5FbGVtZW50KSA9PiB2b2lkO1xuXG4gIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgICh7IHJlcmVuZGVyIH0gPSByZW5kZXIoXG4gICAgICA8c3ZnPlxuICAgICAgICA8U2NydWJiZXIgey4uLihkZWZhdWx0UHJvcHMgYXMgU2NydWJiZXJQcm9wcyl9IC8+XG4gICAgICA8L3N2Zz5cbiAgICApKTtcbiAgfSk7XG5cbiAgaXQoJ2NvbnRhaW5zIHRoZSBwcm9wZXIgc3ZnIGNvbXBvbmVudHMnLCAoKSA9PiB7XG4gICAgY29uc3Qgc2NydWJiZXJDb21wb25lbnQgPSBzY3JlZW4uZ2V0QnlUZXN0SWQoJ3NjcnViYmVyLWNvbXBvbmVudCcpO1xuICAgIGNvbnN0IHNjcnViYmVyQ29tcG9uZW50RyA9IHNjcmVlbi5nZXRCeVRlc3RJZCgnc2NydWJiZXItY29tcG9uZW50LWcnKTtcblxuICAgIGV4cGVjdCh3aXRoaW4oc2NydWJiZXJDb21wb25lbnQpLmdldEJ5VGVzdElkKCdzY3J1YmJlci1jb21wb25lbnQtZycpKS50b0JlVHJ1dGh5KCk7XG4gICAgZXhwZWN0KHdpdGhpbihzY3J1YmJlckNvbXBvbmVudCkuZ2V0QnlUZXN0SWQoJ3NjcnViYmVyLWNvbXBvbmVudC1saW5lJykpLnRvQmVUcnV0aHkoKTtcbiAgICBleHBlY3Qod2l0aGluKHNjcnViYmVyQ29tcG9uZW50RykuZ2V0QnlUZXN0SWQoJ3NjcnViYmVyLWNvbXBvbmVudC1yZWN0LTEnKSkudG9CZVRydXRoeSgpO1xuICAgIGV4cGVjdCh3aXRoaW4oc2NydWJiZXJDb21wb25lbnRHKS5nZXRCeVRlc3RJZCgnc2NydWJiZXItY29tcG9uZW50LXJlY3QtMicpKS50b0JlVHJ1dGh5KCk7XG4gIH0pO1xuXG4gIGl0KCdjYWxjdWxhdGVzIHRoZSBjb3JyZWN0IHglIGZvciBhIHRpbWVzdGFtcCcsICgpID0+IHtcbiAgICByZXJlbmRlcihcbiAgICAgIDxzdmc+XG4gICAgICAgIDxTY3J1YmJlciB7Li4uKGRlZmF1bHRQcm9wcyBhcyBTY3J1YmJlclByb3BzKX0gcG9zaXRpb249ezAuNX0gLz5cbiAgICAgIDwvc3ZnPlxuICAgICk7XG4gICAgY29uc3QgbGluZSA9IHNjcmVlbi5nZXRCeVRlc3RJZCgnc2NydWJiZXItY29tcG9uZW50LWxpbmUnKTtcbiAgICBjb25zdCByZWN0ID0gc2NyZWVuLmdldEJ5VGVzdElkKCdzY3J1YmJlci1jb21wb25lbnQtcmVjdC0xJyk7XG5cbiAgICBleHBlY3QobGluZSkudG9IYXZlQXR0cmlidXRlKCd4MScsICc1MCUnKTtcbiAgICBleHBlY3QobGluZSkudG9IYXZlQXR0cmlidXRlKCd4MicsICc1MCUnKTtcbiAgICBleHBlY3QocmVjdCkudG9IYXZlQXR0cmlidXRlKCd4JywgJzUwJScpO1xuICB9KTtcblxuICBpdCgnc3VwcG9ydHMgb25Nb3VzZURvd24nLCAoKSA9PiB7XG4gICAgZXhwZWN0KGZpcmVFdmVudC5tb3VzZURvd24oc2NyZWVuLmdldEJ5VGVzdElkKCdzY3J1YmJlci1jb21wb25lbnQtZycpKSkudG9CZVRydXRoeSgpO1xuICB9KTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtB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