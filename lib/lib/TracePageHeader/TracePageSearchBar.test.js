import _extends from "@babel/runtime/helpers/extends";
// Copyright (c) 2017 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import { render, screen } from '@testing-library/react';
import React from 'react';
import { createTheme } from '@grafana/data';
import TracePageSearchBar, { getStyles } from './TracePageSearchBar';
import { jsx as _jsx } from "react/jsx-runtime";
var defaultProps = {
  forwardedRef: /*#__PURE__*/React.createRef(),
  navigable: true,
  searchBarSuffix: 'suffix',
  searchValue: 'value'
};
describe('<TracePageSearchBar>', function () {
  describe('truthy textFilter', function () {
    it('renders UiFindInput with correct props', function () {
      render( /*#__PURE__*/_jsx(TracePageSearchBar, _extends({}, defaultProps)));
      expect(screen.getByPlaceholderText('Find...')['value']).toEqual('value');
      var suffix = screen.getByLabelText('Search bar suffix');
      var theme = createTheme();
      expect(suffix['className']).toBe(getStyles(theme).TracePageSearchBarSuffix);
      expect(suffix.textContent).toBe('suffix');
    });
    it('renders buttons', function () {
      render( /*#__PURE__*/_jsx(TracePageSearchBar, _extends({}, defaultProps)));
      var nextResButton = screen.queryByRole('button', {
        name: 'Next results button'
      });
      var prevResButton = screen.queryByRole('button', {
        name: 'Prev results button'
      });
      expect(nextResButton).toBeInTheDocument();
      expect(prevResButton).toBeInTheDocument();
      expect(nextResButton['disabled']).toBe(false);
      expect(prevResButton['disabled']).toBe(false);
    });
    it('only shows navigable buttons when navigable is true', function () {
      var props = _extends({}, defaultProps, {
        navigable: false
      });
      render( /*#__PURE__*/_jsx(TracePageSearchBar, _extends({}, props)));
      expect(screen.queryByRole('button', {
        name: 'Next results button'
      })).not.toBeInTheDocument();
      expect(screen.queryByRole('button', {
        name: 'Prev results button'
      })).not.toBeInTheDocument();
    });
  });
  describe('falsy textFilter', function () {
    beforeEach(function () {
      var props = _extends({}, defaultProps, {
        searchValue: ''
      });
      render( /*#__PURE__*/_jsx(TracePageSearchBar, _extends({}, props)));
    });
    it('does not render suffix', function () {
      expect(screen.queryByLabelText('Search bar suffix')).not.toBeInTheDocument();
    });
    it('renders buttons', function () {
      expect(screen.getByRole('button', {
        name: 'Next results button'
      })).toBeInTheDocument();
      expect(screen.getByRole('button', {
        name: 'Prev results button'
      })).toBeInTheDocument();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,