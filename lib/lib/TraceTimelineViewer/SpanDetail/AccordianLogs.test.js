import _extends from "@babel/runtime/helpers/extends";
// Copyright (c) 2017 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import { render, screen } from '@testing-library/react';
import React from 'react';
import AccordianLogs from './AccordianLogs';
import { jsx as _jsx } from "react/jsx-runtime";
var logs = [{
  timestamp: 10,
  fields: [{
    key: 'message',
    value: 'oh the log message'
  }, {
    key: 'something',
    value: 'else'
  }]
}, {
  timestamp: 20,
  fields: [{
    key: 'message',
    value: 'oh the next log message'
  }, {
    key: 'more',
    value: 'stuff'
  }]
}];
var setup = function setup(propOverrides) {
  var props = _extends({
    logs: logs,
    isOpen: false,
    onItemToggle: jest.fn(),
    onToggle: function onToggle() {},
    openedItems: new Set([logs[1]]),
    timestamp: 5
  }, propOverrides);
  return render( /*#__PURE__*/_jsx(AccordianLogs, _extends({}, props)));
};
describe('AccordianLogs tests', function () {
  it('renders without exploding', function () {
    expect(function () {
      return setup();
    }).not.toThrow();
  });
  it('shows the number of log entries', function () {
    setup();
    expect(screen.getByRole('switch', {
      name: 'Events (2)'
    })).toBeInTheDocument();
  });
  it('hides log entries when not expanded', function () {
    setup({
      isOpen: false
    });
    expect(screen.queryByRole('table')).not.toBeInTheDocument();
  });
  it('shows log entries when expanded', function () {
    setup({
      isOpen: true
    });
    expect(screen.getByRole('table')).toBeInTheDocument();
    expect(screen.queryAllByRole('cell')).toHaveLength(6);
    expect(screen.getByText(/^something$/)).toBeInTheDocument();
    expect(screen.getByText(/^else$/)).toBeInTheDocument();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZW5kZXIiLCJzY3JlZW4iLCJSZWFjdCIsIkFjY29yZGlhbkxvZ3MiLCJqc3giLCJfanN4IiwibG9ncyIsInRpbWVzdGFtcCIsImZpZWxkcyIsImtleSIsInZhbHVlIiwic2V0dXAiLCJwcm9wT3ZlcnJpZGVzIiwicHJvcHMiLCJfZXh0ZW5kcyIsImlzT3BlbiIsIm9uSXRlbVRvZ2dsZSIsImplc3QiLCJmbiIsIm9uVG9nZ2xlIiwib3BlbmVkSXRlbXMiLCJTZXQiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0Iiwibm90IiwidG9UaHJvdyIsImdldEJ5Um9sZSIsIm5hbWUiLCJ0b0JlSW5UaGVEb2N1bWVudCIsInF1ZXJ5QnlSb2xlIiwicXVlcnlBbGxCeVJvbGUiLCJ0b0hhdmVMZW5ndGgiLCJnZXRCeVRleHQiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL1RyYWNlVGltZWxpbmVWaWV3ZXIvU3BhbkRldGFpbC9BY2NvcmRpYW5Mb2dzLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxNyBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG5pbXBvcnQgeyByZW5kZXIsIHNjcmVlbiB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IEFjY29yZGlhbkxvZ3MsIHsgQWNjb3JkaWFuTG9nc1Byb3BzIH0gZnJvbSAnLi9BY2NvcmRpYW5Mb2dzJztcblxuY29uc3QgbG9ncyA9IFtcbiAge1xuICAgIHRpbWVzdGFtcDogMTAsXG4gICAgZmllbGRzOiBbXG4gICAgICB7IGtleTogJ21lc3NhZ2UnLCB2YWx1ZTogJ29oIHRoZSBsb2cgbWVzc2FnZScgfSxcbiAgICAgIHsga2V5OiAnc29tZXRoaW5nJywgdmFsdWU6ICdlbHNlJyB9LFxuICAgIF0sXG4gIH0sXG4gIHtcbiAgICB0aW1lc3RhbXA6IDIwLFxuICAgIGZpZWxkczogW1xuICAgICAgeyBrZXk6ICdtZXNzYWdlJywgdmFsdWU6ICdvaCB0aGUgbmV4dCBsb2cgbWVzc2FnZScgfSxcbiAgICAgIHsga2V5OiAnbW9yZScsIHZhbHVlOiAnc3R1ZmYnIH0sXG4gICAgXSxcbiAgfSxcbl07XG5cbmNvbnN0IHNldHVwID0gKHByb3BPdmVycmlkZXM/OiBBY2NvcmRpYW5Mb2dzUHJvcHMpID0+IHtcbiAgY29uc3QgcHJvcHMgPSB7XG4gICAgbG9ncyxcbiAgICBpc09wZW46IGZhbHNlLFxuICAgIG9uSXRlbVRvZ2dsZTogamVzdC5mbigpLFxuICAgIG9uVG9nZ2xlOiAoKSA9PiB7fSxcbiAgICBvcGVuZWRJdGVtczogbmV3IFNldChbbG9nc1sxXV0pLFxuICAgIHRpbWVzdGFtcDogNSxcbiAgICAuLi5wcm9wT3ZlcnJpZGVzLFxuICB9O1xuXG4gIHJldHVybiByZW5kZXIoPEFjY29yZGlhbkxvZ3Mgey4uLnByb3BzfSAvPik7XG59O1xuXG5kZXNjcmliZSgnQWNjb3JkaWFuTG9ncyB0ZXN0cycsICgpID0+IHtcbiAgaXQoJ3JlbmRlcnMgd2l0aG91dCBleHBsb2RpbmcnLCAoKSA9PiB7XG4gICAgZXhwZWN0KCgpID0+IHNldHVwKCkpLm5vdC50b1Rocm93KCk7XG4gIH0pO1xuXG4gIGl0KCdzaG93cyB0aGUgbnVtYmVyIG9mIGxvZyBlbnRyaWVzJywgKCkgPT4ge1xuICAgIHNldHVwKCk7XG5cbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5Um9sZSgnc3dpdGNoJywgeyBuYW1lOiAnRXZlbnRzICgyKScgfSkpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gIH0pO1xuXG4gIGl0KCdoaWRlcyBsb2cgZW50cmllcyB3aGVuIG5vdCBleHBhbmRlZCcsICgpID0+IHtcbiAgICBzZXR1cCh7IGlzT3BlbjogZmFsc2UgfSBhcyBBY2NvcmRpYW5Mb2dzUHJvcHMpO1xuXG4gICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5Um9sZSgndGFibGUnKSkubm90LnRvQmVJblRoZURvY3VtZW50KCk7XG4gIH0pO1xuXG4gIGl0KCdzaG93cyBsb2cgZW50cmllcyB3aGVuIGV4cGFuZGVkJywgKCkgPT4ge1xuICAgIHNldHVwKHsgaXNPcGVuOiB0cnVlIH0gYXMgQWNjb3JkaWFuTG9nc1Byb3BzKTtcblxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlSb2xlKCd0YWJsZScpKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIGV4cGVjdChzY3JlZW4ucXVlcnlBbGxCeVJvbGUoJ2NlbGwnKSkudG9IYXZlTGVuZ3RoKDYpO1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KC9ec29tZXRoaW5nJC8pKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KC9eZWxzZSQvKSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNBLE1BQU0sRUFBRUMsTUFBTSxRQUFRLHdCQUF3QjtBQUN2RCxPQUFPQyxLQUFLLE1BQU0sT0FBTztBQUV6QixPQUFPQyxhQUFhLE1BQThCLGlCQUFpQjtBQUFDLFNBQUFDLEdBQUEsSUFBQUMsSUFBQTtBQUVwRSxJQUFNQyxJQUFJLEdBQUcsQ0FDWDtFQUNFQyxTQUFTLEVBQUUsRUFBRTtFQUNiQyxNQUFNLEVBQUUsQ0FDTjtJQUFFQyxHQUFHLEVBQUUsU0FBUztJQUFFQyxLQUFLLEVBQUU7RUFBcUIsQ0FBQyxFQUMvQztJQUFFRCxHQUFHLEVBQUUsV0FBVztJQUFFQyxLQUFLLEVBQUU7RUFBTyxDQUFDO0FBRXZDLENBQUMsRUFDRDtFQUNFSCxTQUFTLEVBQUUsRUFBRTtFQUNiQyxNQUFNLEVBQUUsQ0FDTjtJQUFFQyxHQUFHLEVBQUUsU0FBUztJQUFFQyxLQUFLLEVBQUU7RUFBMEIsQ0FBQyxFQUNwRDtJQUFFRCxHQUFHLEVBQUUsTUFBTTtJQUFFQyxLQUFLLEVBQUU7RUFBUSxDQUFDO0FBRW5DLENBQUMsQ0FDRjtBQUVELElBQU1DLEtBQUssR0FBRyxTQUFSQSxLQUFLQSxDQUFJQyxhQUFrQyxFQUFLO0VBQ3BELElBQU1DLEtBQUssR0FBQUMsUUFBQTtJQUNUUixJQUFJLEVBQUpBLElBQUk7SUFDSlMsTUFBTSxFQUFFLEtBQUs7SUFDYkMsWUFBWSxFQUFFQyxJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZCQyxRQUFRLEVBQUUsU0FBQUEsU0FBQSxFQUFNLENBQUMsQ0FBQztJQUNsQkMsV0FBVyxFQUFFLElBQUlDLEdBQUcsQ0FBQyxDQUFDZixJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMvQkMsU0FBUyxFQUFFO0VBQUMsR0FDVEssYUFBYSxDQUNqQjtFQUVELE9BQU9aLE1BQU0sZUFBQ0ssSUFBQSxDQUFDRixhQUFhLEVBQUFXLFFBQUEsS0FBS0QsS0FBSyxDQUFHLENBQUMsQ0FBQztBQUM3QyxDQUFDO0FBRURTLFFBQVEsQ0FBQyxxQkFBcUIsRUFBRSxZQUFNO0VBQ3BDQyxFQUFFLENBQUMsMkJBQTJCLEVBQUUsWUFBTTtJQUNwQ0MsTUFBTSxDQUFDO01BQUEsT0FBTWIsS0FBSyxDQUFDLENBQUM7SUFBQSxFQUFDLENBQUNjLEdBQUcsQ0FBQ0MsT0FBTyxDQUFDLENBQUM7RUFDckMsQ0FBQyxDQUFDO0VBRUZILEVBQUUsQ0FBQyxpQ0FBaUMsRUFBRSxZQUFNO0lBQzFDWixLQUFLLENBQUMsQ0FBQztJQUVQYSxNQUFNLENBQUN2QixNQUFNLENBQUMwQixTQUFTLENBQUMsUUFBUSxFQUFFO01BQUVDLElBQUksRUFBRTtJQUFhLENBQUMsQ0FBQyxDQUFDLENBQUNDLGlCQUFpQixDQUFDLENBQUM7RUFDaEYsQ0FBQyxDQUFDO0VBRUZOLEVBQUUsQ0FBQyxxQ0FBcUMsRUFBRSxZQUFNO0lBQzlDWixLQUFLLENBQUM7TUFBRUksTUFBTSxFQUFFO0lBQU0sQ0FBdUIsQ0FBQztJQUU5Q1MsTUFBTSxDQUFDdkIsTUFBTSxDQUFDNkIsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUNMLEdBQUcsQ0FBQ0ksaUJBQWlCLENBQUMsQ0FBQztFQUM3RCxDQUFDLENBQUM7RUFFRk4sRUFBRSxDQUFDLGlDQUFpQyxFQUFFLFlBQU07SUFDMUNaLEtBQUssQ0FBQztNQUFFSSxNQUFNLEVBQUU7SUFBSyxDQUF1QixDQUFDO0lBRTdDUyxNQUFNLENBQUN2QixNQUFNLENBQUMwQixTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQ0UsaUJBQWlCLENBQUMsQ0FBQztJQUNyREwsTUFBTSxDQUFDdkIsTUFBTSxDQUFDOEIsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUNDLFlBQVksQ0FBQyxDQUFDLENBQUM7SUFDckRSLE1BQU0sQ0FBQ3ZCLE1BQU0sQ0FBQ2dDLFNBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDSixpQkFBaUIsQ0FBQyxDQUFDO0lBQzNETCxNQUFNLENBQUN2QixNQUFNLENBQUNnQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQ0osaUJBQWlCLENBQUMsQ0FBQztFQUN4RCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=