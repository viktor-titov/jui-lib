import _extends from "@babel/runtime/helpers/extends";
// Copyright (c) 2017 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import { render, screen } from '@testing-library/react';
import React from 'react';
import TimelineHeaderRow from './TimelineHeaderRow';
import { jsx as _jsx } from "react/jsx-runtime";
var nameColumnWidth = 0.25;
var setup = function setup() {
  var props = {
    nameColumnWidth: nameColumnWidth,
    duration: 1234,
    numTicks: 5,
    onCollapseAll: function onCollapseAll() {},
    onCollapseOne: function onCollapseOne() {},
    onColummWidthChange: function onColummWidthChange() {},
    onExpandAll: function onExpandAll() {},
    onExpandOne: function onExpandOne() {},
    updateNextViewRangeTime: function updateNextViewRangeTime() {},
    updateViewRangeTime: function updateViewRangeTime() {},
    viewRangeTime: {
      current: [0.1, 0.9]
    }
  };
  return render( /*#__PURE__*/_jsx(TimelineHeaderRow, _extends({}, props)));
};
describe('TimelineHeaderRow', function () {
  it('renders without exploding', function () {
    expect(function () {
      return setup();
    }).not.toThrow();
  });
  it('renders the title', function () {
    setup();
    expect(screen.getByRole('heading', {
      name: 'Service & Operation'
    }));
  });
  it('renders the collapser controls', function () {
    setup();
    expect(screen.getByRole('button', {
      name: 'Expand All'
    })).toBeInTheDocument();
    expect(screen.getByRole('button', {
      name: 'Collapse All'
    })).toBeInTheDocument();
    expect(screen.getByRole('button', {
      name: 'Expand +1'
    })).toBeInTheDocument();
    expect(screen.getByRole('button', {
      name: 'Collapse +1'
    })).toBeInTheDocument();
  });
  it('renders the resizer controls', function () {
    setup();
    expect(screen.getByTestId('TimelineColumnResizer')).toBeInTheDocument();
    expect(screen.getByTestId('TimelineColumnResizer--dragger')).toBeInTheDocument();
    expect(screen.getByTestId('TimelineColumnResizer--gripIcon')).toBeInTheDocument();
  });
  it('propagates the name column width', function () {
    setup();
    var timelineCells = screen.queryAllByTestId('TimelineRowCell');
    expect(timelineCells).toHaveLength(2);
    expect(getComputedStyle(timelineCells[0]).maxWidth).toBe(nameColumnWidth * 100 + "%");
    expect(getComputedStyle(timelineCells[1]).maxWidth).toBe((1 - nameColumnWidth) * 100 + "%");
  });
  it('renders the TimelineViewingLayer', function () {
    setup();
    expect(screen.getByTestId('TimelineViewingLayer')).toBeInTheDocument();
  });
  it('renders the Ticks', function () {
    setup();
    expect(screen.getAllByTestId('TicksID')).toHaveLength(5);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,