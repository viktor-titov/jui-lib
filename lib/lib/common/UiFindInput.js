import _extends from "@babel/runtime/helpers/extends";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
// Copyright (c) 2019 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import * as React from 'react';
import { IconButton, Input } from '@grafana/ui';
import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
var UiFindInput = /*#__PURE__*/function (_React$PureComponent) {
  function UiFindInput() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;
    _this.clearUiFind = function () {
      _this.props.onChange('');
    };
    return _this;
  }
  _inheritsLoose(UiFindInput, _React$PureComponent);
  var _proto = UiFindInput.prototype;
  _proto.render = function render() {
    var _this2 = this;
    var _this$props = this.props,
      allowClear = _this$props.allowClear,
      inputProps = _this$props.inputProps,
      value = _this$props.value;
    var suffix = /*#__PURE__*/_jsxs(_Fragment, {
      children: [inputProps.suffix, allowClear && value && value.length && /*#__PURE__*/_jsx(IconButton, {
        name: "times",
        onClick: this.clearUiFind
      })]
    });
    return /*#__PURE__*/_jsx(Input, _extends({
      placeholder: "Find..."
    }, inputProps, {
      onChange: function onChange(e) {
        return _this2.props.onChange(e.currentTarget.value);
      },
      suffix: suffix,
      value: value
    }));
  };
  return UiFindInput;
}(React.PureComponent);
UiFindInput.defaultProps = {
  inputProps: {},
  trackFindFunction: undefined,
  value: undefined
};
export { UiFindInput as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIkljb25CdXR0b24iLCJJbnB1dCIsImpzeCIsIl9qc3giLCJGcmFnbWVudCIsIl9GcmFnbWVudCIsImpzeHMiLCJfanN4cyIsIlVpRmluZElucHV0IiwiX1JlYWN0JFB1cmVDb21wb25lbnQiLCJfdGhpcyIsIl9sZW4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJhcmdzIiwiQXJyYXkiLCJfa2V5IiwiY2FsbCIsImFwcGx5IiwiY29uY2F0IiwiY2xlYXJVaUZpbmQiLCJwcm9wcyIsIm9uQ2hhbmdlIiwiX2luaGVyaXRzTG9vc2UiLCJfcHJvdG8iLCJwcm90b3R5cGUiLCJyZW5kZXIiLCJfdGhpczIiLCJfdGhpcyRwcm9wcyIsImFsbG93Q2xlYXIiLCJpbnB1dFByb3BzIiwidmFsdWUiLCJzdWZmaXgiLCJjaGlsZHJlbiIsIm5hbWUiLCJvbkNsaWNrIiwiX2V4dGVuZHMiLCJwbGFjZWhvbGRlciIsImUiLCJjdXJyZW50VGFyZ2V0IiwiUHVyZUNvbXBvbmVudCIsImRlZmF1bHRQcm9wcyIsInRyYWNrRmluZEZ1bmN0aW9uIiwidW5kZWZpbmVkIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvY29tbW9uL1VpRmluZElucHV0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMTkgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBJY29uQnV0dG9uLCBJbnB1dCB9IGZyb20gJ0BncmFmYW5hL3VpJztcblxuaW1wb3J0IHsgVE5pbCB9IGZyb20gJy4uL3R5cGVzL2luZGV4JztcblxudHlwZSBQcm9wcyA9IHtcbiAgYWxsb3dDbGVhcj86IGJvb2xlYW47XG4gIGlucHV0UHJvcHM6IFJlY29yZDxzdHJpbmcsIGFueT47XG4gIGxvY2F0aW9uOiBMb2NhdGlvbjtcbiAgbWF0Y2g6IGFueTtcbiAgdHJhY2tGaW5kRnVuY3Rpb24/OiAoc3RyOiBzdHJpbmcgfCBUTmlsKSA9PiB2b2lkO1xuICB2YWx1ZTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICBvbkNoYW5nZTogKHZhbHVlOiBzdHJpbmcpID0+IHZvaWQ7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVaUZpbmRJbnB1dCBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQ8UHJvcHM+IHtcbiAgc3RhdGljIGRlZmF1bHRQcm9wczogUGFydGlhbDxQcm9wcz4gPSB7XG4gICAgaW5wdXRQcm9wczoge30sXG4gICAgdHJhY2tGaW5kRnVuY3Rpb246IHVuZGVmaW5lZCxcbiAgICB2YWx1ZTogdW5kZWZpbmVkLFxuICB9O1xuXG4gIGNsZWFyVWlGaW5kID0gKCkgPT4ge1xuICAgIHRoaXMucHJvcHMub25DaGFuZ2UoJycpO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGFsbG93Q2xlYXIsIGlucHV0UHJvcHMsIHZhbHVlIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgY29uc3Qgc3VmZml4ID0gKFxuICAgICAgPD5cbiAgICAgICAge2lucHV0UHJvcHMuc3VmZml4fVxuICAgICAgICB7YWxsb3dDbGVhciAmJiB2YWx1ZSAmJiB2YWx1ZS5sZW5ndGggJiYgPEljb25CdXR0b24gbmFtZT1cInRpbWVzXCIgb25DbGljaz17dGhpcy5jbGVhclVpRmluZH0gLz59XG4gICAgICA8Lz5cbiAgICApO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxJbnB1dFxuICAgICAgICBwbGFjZWhvbGRlcj1cIkZpbmQuLi5cIlxuICAgICAgICB7Li4uaW5wdXRQcm9wc31cbiAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB0aGlzLnByb3BzLm9uQ2hhbmdlKGUuY3VycmVudFRhcmdldC52YWx1ZSl9XG4gICAgICAgIHN1ZmZpeD17c3VmZml4fVxuICAgICAgICB2YWx1ZT17dmFsdWV9XG4gICAgICAvPlxuICAgICk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPLEtBQUtBLEtBQUssTUFBTSxPQUFPO0FBRTlCLFNBQVNDLFVBQVUsRUFBRUMsS0FBSyxRQUFRLGFBQWE7QUFBQyxTQUFBQyxHQUFBLElBQUFDLElBQUEsRUFBQUMsUUFBQSxJQUFBQyxTQUFBLEVBQUFDLElBQUEsSUFBQUMsS0FBQTtBQUFBLElBYzNCQyxXQUFXLDBCQUFBQyxvQkFBQTtFQUFBLFNBQUFELFlBQUE7SUFBQSxJQUFBRSxLQUFBO0lBQUEsU0FBQUMsSUFBQSxHQUFBQyxTQUFBLENBQUFDLE1BQUEsRUFBQUMsSUFBQSxPQUFBQyxLQUFBLENBQUFKLElBQUEsR0FBQUssSUFBQSxNQUFBQSxJQUFBLEdBQUFMLElBQUEsRUFBQUssSUFBQTtNQUFBRixJQUFBLENBQUFFLElBQUEsSUFBQUosU0FBQSxDQUFBSSxJQUFBO0lBQUE7SUFBQU4sS0FBQSxHQUFBRCxvQkFBQSxDQUFBUSxJQUFBLENBQUFDLEtBQUEsQ0FBQVQsb0JBQUEsU0FBQVUsTUFBQSxDQUFBTCxJQUFBO0lBQUFKLEtBQUEsQ0FPOUJVLFdBQVcsR0FBRyxZQUFNO01BQ2xCVixLQUFBLENBQUtXLEtBQUssQ0FBQ0MsUUFBUSxDQUFDLEVBQUUsQ0FBQztJQUN6QixDQUFDO0lBQUEsT0FBQVosS0FBQTtFQUFBO0VBQUFhLGNBQUEsQ0FBQWYsV0FBQSxFQUFBQyxvQkFBQTtFQUFBLElBQUFlLE1BQUEsR0FBQWhCLFdBQUEsQ0FBQWlCLFNBQUE7RUFBQUQsTUFBQSxDQUVERSxNQUFNLEdBQU4sU0FBQUEsT0FBQSxFQUFTO0lBQUEsSUFBQUMsTUFBQTtJQUNQLElBQUFDLFdBQUEsR0FBMEMsSUFBSSxDQUFDUCxLQUFLO01BQTVDUSxVQUFVLEdBQUFELFdBQUEsQ0FBVkMsVUFBVTtNQUFFQyxVQUFVLEdBQUFGLFdBQUEsQ0FBVkUsVUFBVTtNQUFFQyxLQUFLLEdBQUFILFdBQUEsQ0FBTEcsS0FBSztJQUVyQyxJQUFNQyxNQUFNLGdCQUNWekIsS0FBQSxDQUFBRixTQUFBO01BQUE0QixRQUFBLEdBQ0dILFVBQVUsQ0FBQ0UsTUFBTSxFQUNqQkgsVUFBVSxJQUFJRSxLQUFLLElBQUlBLEtBQUssQ0FBQ2xCLE1BQU0saUJBQUlWLElBQUEsQ0FBQ0gsVUFBVTtRQUFDa0MsSUFBSSxFQUFDLE9BQU87UUFBQ0MsT0FBTyxFQUFFLElBQUksQ0FBQ2Y7TUFBWSxDQUFFLENBQUM7SUFBQSxDQUM5RixDQUNIO0lBRUQsb0JBQ0VqQixJQUFBLENBQUNGLEtBQUssRUFBQW1DLFFBQUE7TUFDSkMsV0FBVyxFQUFDO0lBQVMsR0FDakJQLFVBQVU7TUFDZFIsUUFBUSxFQUFFLFNBQUFBLFNBQUNnQixDQUFDO1FBQUEsT0FBS1gsTUFBSSxDQUFDTixLQUFLLENBQUNDLFFBQVEsQ0FBQ2dCLENBQUMsQ0FBQ0MsYUFBYSxDQUFDUixLQUFLLENBQUM7TUFBQSxDQUFDO01BQzVEQyxNQUFNLEVBQUVBLE1BQU87TUFDZkQsS0FBSyxFQUFFQTtJQUFNLEVBQ2QsQ0FBQztFQUVOLENBQUM7RUFBQSxPQUFBdkIsV0FBQTtBQUFBLEVBOUJzQ1QsS0FBSyxDQUFDeUMsYUFBYTtBQUF2Q2hDLFdBQVcsQ0FDdkJpQyxZQUFZLEdBQW1CO0VBQ3BDWCxVQUFVLEVBQUUsQ0FBQyxDQUFDO0VBQ2RZLGlCQUFpQixFQUFFQyxTQUFTO0VBQzVCWixLQUFLLEVBQUVZO0FBQ1QsQ0FBQztBQUFBLFNBTGtCbkMsV0FBVyxJQUFBb0MsT0FBQSIsImlnbm9yZUxpc3QiOltdfQ==