import _extends from "@babel/runtime/helpers/extends";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
// Copyright (c) 2019 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import * as React from 'react';
import { IconButton, Input } from '@grafana/ui';
import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
var UiFindInput = /*#__PURE__*/function (_React$PureComponent) {
  function UiFindInput() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;
    _this.clearUiFind = function () {
      _this.props.onChange('');
    };
    return _this;
  }
  _inheritsLoose(UiFindInput, _React$PureComponent);
  var _proto = UiFindInput.prototype;
  _proto.render = function render() {
    var _this2 = this;
    var _this$props = this.props,
      allowClear = _this$props.allowClear,
      inputProps = _this$props.inputProps,
      value = _this$props.value;
    var suffix = /*#__PURE__*/_jsxs(_Fragment, {
      children: [inputProps.suffix, allowClear && value && value.length && /*#__PURE__*/_jsx(IconButton, {
        name: "times",
        onClick: this.clearUiFind
      })]
    });
    return /*#__PURE__*/_jsx(Input, _extends({
      placeholder: "Find..."
    }, inputProps, {
      onChange: function onChange(e) {
        return _this2.props.onChange(e.currentTarget.value);
      },
      suffix: suffix,
      value: value
    }));
  };
  return UiFindInput;
}(React.PureComponent);
UiFindInput.defaultProps = {
  inputProps: {},
  trackFindFunction: undefined,
  value: undefined
};
export { UiFindInput as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIkljb25CdXR0b24iLCJJbnB1dCIsImpzeCIsIl9qc3giLCJGcmFnbWVudCIsIl9GcmFnbWVudCIsImpzeHMiLCJfanN4cyIsIlVpRmluZElucHV0IiwiX1JlYWN0JFB1cmVDb21wb25lbnQiLCJfdGhpcyIsIl9sZW4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJhcmdzIiwiQXJyYXkiLCJfa2V5IiwiY2FsbCIsImFwcGx5IiwiY29uY2F0IiwiY2xlYXJVaUZpbmQiLCJwcm9wcyIsIm9uQ2hhbmdlIiwiX2luaGVyaXRzTG9vc2UiLCJfcHJvdG8iLCJwcm90b3R5cGUiLCJyZW5kZXIiLCJfdGhpczIiLCJfdGhpcyRwcm9wcyIsImFsbG93Q2xlYXIiLCJpbnB1dFByb3BzIiwidmFsdWUiLCJzdWZmaXgiLCJjaGlsZHJlbiIsIm5hbWUiLCJvbkNsaWNrIiwiX2V4dGVuZHMiLCJwbGFjZWhvbGRlciIsImUiLCJjdXJyZW50VGFyZ2V0IiwiUHVyZUNvbXBvbmVudCIsImRlZmF1bHRQcm9wcyIsInRyYWNrRmluZEZ1bmN0aW9uIiwidW5kZWZpbmVkIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tb24vVWlGaW5kSW5wdXQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxOSBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IEljb25CdXR0b24sIElucHV0IH0gZnJvbSAnQGdyYWZhbmEvdWknO1xuXG5pbXBvcnQgeyBUTmlsIH0gZnJvbSAnLi4vdHlwZXMvaW5kZXgnO1xuXG50eXBlIFByb3BzID0ge1xuICBhbGxvd0NsZWFyPzogYm9vbGVhbjtcbiAgaW5wdXRQcm9wczogUmVjb3JkPHN0cmluZywgYW55PjtcbiAgbG9jYXRpb246IExvY2F0aW9uO1xuICBtYXRjaDogYW55O1xuICB0cmFja0ZpbmRGdW5jdGlvbj86IChzdHI6IHN0cmluZyB8IFROaWwpID0+IHZvaWQ7XG4gIHZhbHVlOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gIG9uQ2hhbmdlOiAodmFsdWU6IHN0cmluZykgPT4gdm9pZDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVpRmluZElucHV0IGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudDxQcm9wcz4ge1xuICBzdGF0aWMgZGVmYXVsdFByb3BzOiBQYXJ0aWFsPFByb3BzPiA9IHtcbiAgICBpbnB1dFByb3BzOiB7fSxcbiAgICB0cmFja0ZpbmRGdW5jdGlvbjogdW5kZWZpbmVkLFxuICAgIHZhbHVlOiB1bmRlZmluZWQsXG4gIH07XG5cbiAgY2xlYXJVaUZpbmQgPSAoKSA9PiB7XG4gICAgdGhpcy5wcm9wcy5vbkNoYW5nZSgnJyk7XG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgYWxsb3dDbGVhciwgaW5wdXRQcm9wcywgdmFsdWUgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBzdWZmaXggPSAoXG4gICAgICA8PlxuICAgICAgICB7aW5wdXRQcm9wcy5zdWZmaXh9XG4gICAgICAgIHthbGxvd0NsZWFyICYmIHZhbHVlICYmIHZhbHVlLmxlbmd0aCAmJiA8SWNvbkJ1dHRvbiBuYW1lPVwidGltZXNcIiBvbkNsaWNrPXt0aGlzLmNsZWFyVWlGaW5kfSAvPn1cbiAgICAgIDwvPlxuICAgICk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPElucHV0XG4gICAgICAgIHBsYWNlaG9sZGVyPVwiRmluZC4uLlwiXG4gICAgICAgIHsuLi5pbnB1dFByb3BzfVxuICAgICAgICBvbkNoYW5nZT17KGUpID0+IHRoaXMucHJvcHMub25DaGFuZ2UoZS5jdXJyZW50VGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgc3VmZml4PXtzdWZmaXh9XG4gICAgICAgIHZhbHVlPXt2YWx1ZX1cbiAgICAgIC8+XG4gICAgKTtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU8sS0FBS0EsS0FBSyxNQUFNLE9BQU87QUFFOUIsU0FBU0MsVUFBVSxFQUFFQyxLQUFLLFFBQVEsYUFBYTtBQUFDLFNBQUFDLEdBQUEsSUFBQUMsSUFBQSxFQUFBQyxRQUFBLElBQUFDLFNBQUEsRUFBQUMsSUFBQSxJQUFBQyxLQUFBO0FBQUEsSUFjM0JDLFdBQVcsMEJBQUFDLG9CQUFBO0VBQUEsU0FBQUQsWUFBQTtJQUFBLElBQUFFLEtBQUE7SUFBQSxTQUFBQyxJQUFBLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxFQUFBQyxJQUFBLE9BQUFDLEtBQUEsQ0FBQUosSUFBQSxHQUFBSyxJQUFBLE1BQUFBLElBQUEsR0FBQUwsSUFBQSxFQUFBSyxJQUFBO01BQUFGLElBQUEsQ0FBQUUsSUFBQSxJQUFBSixTQUFBLENBQUFJLElBQUE7SUFBQTtJQUFBTixLQUFBLEdBQUFELG9CQUFBLENBQUFRLElBQUEsQ0FBQUMsS0FBQSxDQUFBVCxvQkFBQSxTQUFBVSxNQUFBLENBQUFMLElBQUE7SUFBQUosS0FBQSxDQU85QlUsV0FBVyxHQUFHLFlBQU07TUFDbEJWLEtBQUEsQ0FBS1csS0FBSyxDQUFDQyxRQUFRLENBQUMsRUFBRSxDQUFDO0lBQ3pCLENBQUM7SUFBQSxPQUFBWixLQUFBO0VBQUE7RUFBQWEsY0FBQSxDQUFBZixXQUFBLEVBQUFDLG9CQUFBO0VBQUEsSUFBQWUsTUFBQSxHQUFBaEIsV0FBQSxDQUFBaUIsU0FBQTtFQUFBRCxNQUFBLENBRURFLE1BQU0sR0FBTixTQUFBQSxPQUFBLEVBQVM7SUFBQSxJQUFBQyxNQUFBO0lBQ1AsSUFBQUMsV0FBQSxHQUEwQyxJQUFJLENBQUNQLEtBQUs7TUFBNUNRLFVBQVUsR0FBQUQsV0FBQSxDQUFWQyxVQUFVO01BQUVDLFVBQVUsR0FBQUYsV0FBQSxDQUFWRSxVQUFVO01BQUVDLEtBQUssR0FBQUgsV0FBQSxDQUFMRyxLQUFLO0lBRXJDLElBQU1DLE1BQU0sZ0JBQ1Z6QixLQUFBLENBQUFGLFNBQUE7TUFBQTRCLFFBQUEsR0FDR0gsVUFBVSxDQUFDRSxNQUFNLEVBQ2pCSCxVQUFVLElBQUlFLEtBQUssSUFBSUEsS0FBSyxDQUFDbEIsTUFBTSxpQkFBSVYsSUFBQSxDQUFDSCxVQUFVO1FBQUNrQyxJQUFJLEVBQUMsT0FBTztRQUFDQyxPQUFPLEVBQUUsSUFBSSxDQUFDZjtNQUFZLENBQUUsQ0FBQztJQUFBLENBQzlGLENBQ0g7SUFFRCxvQkFDRWpCLElBQUEsQ0FBQ0YsS0FBSyxFQUFBbUMsUUFBQTtNQUNKQyxXQUFXLEVBQUM7SUFBUyxHQUNqQlAsVUFBVTtNQUNkUixRQUFRLEVBQUUsU0FBQUEsU0FBQ2dCLENBQUM7UUFBQSxPQUFLWCxNQUFJLENBQUNOLEtBQUssQ0FBQ0MsUUFBUSxDQUFDZ0IsQ0FBQyxDQUFDQyxhQUFhLENBQUNSLEtBQUssQ0FBQztNQUFBLENBQUM7TUFDNURDLE1BQU0sRUFBRUEsTUFBTztNQUNmRCxLQUFLLEVBQUVBO0lBQU0sRUFDZCxDQUFDO0VBRU4sQ0FBQztFQUFBLE9BQUF2QixXQUFBO0FBQUEsRUE5QnNDVCxLQUFLLENBQUN5QyxhQUFhO0FBQXZDaEMsV0FBVyxDQUN2QmlDLFlBQVksR0FBbUI7RUFDcENYLFVBQVUsRUFBRSxDQUFDLENBQUM7RUFDZFksaUJBQWlCLEVBQUVDLFNBQVM7RUFDNUJaLEtBQUssRUFBRVk7QUFDVCxDQUFDO0FBQUEsU0FMa0JuQyxXQUFXLElBQUFvQyxPQUFBIiwiaWdub3JlTGlzdCI6W119