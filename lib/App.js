import _extends from "@babel/runtime/helpers/extends";
import React from "react";
import { UnthemedTraceTimelineViewer } from "./lib/TraceTimelineViewer";
import transformTraceData from "./lib/model/transform-trace-data";
import traceGenerators from "./lib/demo/trace-generators";
import { createTheme } from "@grafana/data";
import { jsx as _jsx } from "react/jsx-runtime";
var trace = transformTraceData(traceGenerators.trace({}));
var props = {
  trace: trace,
  textFilter: null,
  viewRange: {
    time: {
      current: [0, 1]
    }
  },
  traceTimeline: {
    childrenHiddenIDs: new Set(),
    hoverIndentGuideIds: new Set(),
    spanNameColumnWidth: 0.5,
    detailStates: new Map()
  },
  expandAll: function expandAll() {},
  collapseAll: function collapseAll() {},
  expandOne: function expandOne() {},
  registerAccessors: function registerAccessors() {},
  collapseOne: function collapseOne() {},
  setTrace: function setTrace() {},
  theme: createTheme(),
  history: {
    replace: function replace() {}
  },
  location: {
    search: null
  }
};
export default function App() {
  return /*#__PURE__*/_jsx(UnthemedTraceTimelineViewer, _extends({}, props));
  // return <TraceName traceName="trace name"></TraceName>
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIlVudGhlbWVkVHJhY2VUaW1lbGluZVZpZXdlciIsInRyYW5zZm9ybVRyYWNlRGF0YSIsInRyYWNlR2VuZXJhdG9ycyIsImNyZWF0ZVRoZW1lIiwianN4IiwiX2pzeCIsInRyYWNlIiwicHJvcHMiLCJ0ZXh0RmlsdGVyIiwidmlld1JhbmdlIiwidGltZSIsImN1cnJlbnQiLCJ0cmFjZVRpbWVsaW5lIiwiY2hpbGRyZW5IaWRkZW5JRHMiLCJTZXQiLCJob3ZlckluZGVudEd1aWRlSWRzIiwic3Bhbk5hbWVDb2x1bW5XaWR0aCIsImRldGFpbFN0YXRlcyIsIk1hcCIsImV4cGFuZEFsbCIsImNvbGxhcHNlQWxsIiwiZXhwYW5kT25lIiwicmVnaXN0ZXJBY2Nlc3NvcnMiLCJjb2xsYXBzZU9uZSIsInNldFRyYWNlIiwidGhlbWUiLCJoaXN0b3J5IiwicmVwbGFjZSIsImxvY2F0aW9uIiwic2VhcmNoIiwiQXBwIiwiX2V4dGVuZHMiXSwic291cmNlcyI6WyIuLi9zcmMvQXBwLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCB7IFRQcm9wcywgVW50aGVtZWRUcmFjZVRpbWVsaW5lVmlld2VyIH0gZnJvbSBcIi4vbGliL1RyYWNlVGltZWxpbmVWaWV3ZXJcIjtcbmltcG9ydCB0cmFuc2Zvcm1UcmFjZURhdGEgZnJvbSBcIi4vbGliL21vZGVsL3RyYW5zZm9ybS10cmFjZS1kYXRhXCI7XG5pbXBvcnQgdHJhY2VHZW5lcmF0b3JzIGZyb20gXCIuL2xpYi9kZW1vL3RyYWNlLWdlbmVyYXRvcnNcIjtcbmltcG9ydCB7IGNyZWF0ZVRoZW1lIH0gZnJvbSBcIkBncmFmYW5hL2RhdGFcIjtcblxuY29uc3QgdHJhY2UgPSB0cmFuc2Zvcm1UcmFjZURhdGEodHJhY2VHZW5lcmF0b3JzLnRyYWNlKHt9KSk7XG5jb25zdCBwcm9wcyA9IHtcblx0dHJhY2UsXG5cdHRleHRGaWx0ZXI6IG51bGwsXG5cdHZpZXdSYW5nZToge1xuXHRcdHRpbWU6IHtcblx0XHRcdGN1cnJlbnQ6IFswLCAxXSxcblx0XHR9LFxuXHR9LFxuXHR0cmFjZVRpbWVsaW5lOiB7XG5cdFx0Y2hpbGRyZW5IaWRkZW5JRHM6IG5ldyBTZXQoKSxcblx0XHRob3ZlckluZGVudEd1aWRlSWRzOiBuZXcgU2V0KCksXG5cdFx0c3Bhbk5hbWVDb2x1bW5XaWR0aDogMC41LFxuXHRcdGRldGFpbFN0YXRlczogbmV3IE1hcCgpLFxuXHR9LFxuXHRleHBhbmRBbGw6ICgpID0+IHsgfSxcblx0Y29sbGFwc2VBbGw6ICgpID0+IHsgfSxcblx0ZXhwYW5kT25lOiAoKSA9PiB7IH0sXG5cdHJlZ2lzdGVyQWNjZXNzb3JzOiAoKSA9PiB7IH0sXG5cdGNvbGxhcHNlT25lOiAoKSA9PiB7IH0sXG5cdHNldFRyYWNlOiAoKSA9PiB7IH0sXG5cdHRoZW1lOiBjcmVhdGVUaGVtZSgpLFxuXHRoaXN0b3J5OiB7XG5cdFx0cmVwbGFjZTogKCkgPT4geyB9LFxuXHR9LFxuXHRsb2NhdGlvbjoge1xuXHRcdHNlYXJjaDogbnVsbCxcblx0fSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFwcCgpIHtcblx0cmV0dXJuIDxVbnRoZW1lZFRyYWNlVGltZWxpbmVWaWV3ZXIgey4uLihwcm9wcyBhcyB1bmtub3duIGFzIFRQcm9wcyl9PjwvVW50aGVtZWRUcmFjZVRpbWVsaW5lVmlld2VyPjtcblx0Ly8gcmV0dXJuIDxUcmFjZU5hbWUgdHJhY2VOYW1lPVwidHJhY2UgbmFtZVwiPjwvVHJhY2VOYW1lPlxufVxuIl0sIm1hcHBpbmdzIjoiO0FBQUEsT0FBT0EsS0FBSyxNQUFNLE9BQU87QUFFekIsU0FBaUJDLDJCQUEyQixRQUFRLDJCQUEyQjtBQUMvRSxPQUFPQyxrQkFBa0IsTUFBTSxrQ0FBa0M7QUFDakUsT0FBT0MsZUFBZSxNQUFNLDZCQUE2QjtBQUN6RCxTQUFTQyxXQUFXLFFBQVEsZUFBZTtBQUFDLFNBQUFDLEdBQUEsSUFBQUMsSUFBQTtBQUU1QyxJQUFNQyxLQUFLLEdBQUdMLGtCQUFrQixDQUFDQyxlQUFlLENBQUNJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNELElBQU1DLEtBQUssR0FBRztFQUNiRCxLQUFLLEVBQUxBLEtBQUs7RUFDTEUsVUFBVSxFQUFFLElBQUk7RUFDaEJDLFNBQVMsRUFBRTtJQUNWQyxJQUFJLEVBQUU7TUFDTEMsT0FBTyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDZjtFQUNELENBQUM7RUFDREMsYUFBYSxFQUFFO0lBQ2RDLGlCQUFpQixFQUFFLElBQUlDLEdBQUcsQ0FBQyxDQUFDO0lBQzVCQyxtQkFBbUIsRUFBRSxJQUFJRCxHQUFHLENBQUMsQ0FBQztJQUM5QkUsbUJBQW1CLEVBQUUsR0FBRztJQUN4QkMsWUFBWSxFQUFFLElBQUlDLEdBQUcsQ0FBQztFQUN2QixDQUFDO0VBQ0RDLFNBQVMsRUFBRSxTQUFBQSxVQUFBLEVBQU0sQ0FBRSxDQUFDO0VBQ3BCQyxXQUFXLEVBQUUsU0FBQUEsWUFBQSxFQUFNLENBQUUsQ0FBQztFQUN0QkMsU0FBUyxFQUFFLFNBQUFBLFVBQUEsRUFBTSxDQUFFLENBQUM7RUFDcEJDLGlCQUFpQixFQUFFLFNBQUFBLGtCQUFBLEVBQU0sQ0FBRSxDQUFDO0VBQzVCQyxXQUFXLEVBQUUsU0FBQUEsWUFBQSxFQUFNLENBQUUsQ0FBQztFQUN0QkMsUUFBUSxFQUFFLFNBQUFBLFNBQUEsRUFBTSxDQUFFLENBQUM7RUFDbkJDLEtBQUssRUFBRXRCLFdBQVcsQ0FBQyxDQUFDO0VBQ3BCdUIsT0FBTyxFQUFFO0lBQ1JDLE9BQU8sRUFBRSxTQUFBQSxRQUFBLEVBQU0sQ0FBRTtFQUNsQixDQUFDO0VBQ0RDLFFBQVEsRUFBRTtJQUNUQyxNQUFNLEVBQUU7RUFDVDtBQUNELENBQUM7QUFFRCxlQUFlLFNBQVNDLEdBQUdBLENBQUEsRUFBRztFQUM3QixvQkFBT3pCLElBQUEsQ0FBQ0wsMkJBQTJCLEVBQUErQixRQUFBLEtBQU14QixLQUFLLENBQXFELENBQUM7RUFDcEc7QUFDRCIsImlnbm9yZUxpc3QiOltdfQ==