import _extends from "@babel/runtime/helpers/extends";
// Copyright (c) 2017 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import { render, screen } from '@testing-library/react';
import React from 'react';
import AccordianLogs from './AccordianLogs';
import { jsx as _jsx } from "react/jsx-runtime";
var logs = [{
  timestamp: 10,
  fields: [{
    key: 'message',
    value: 'oh the log message'
  }, {
    key: 'something',
    value: 'else'
  }]
}, {
  timestamp: 20,
  fields: [{
    key: 'message',
    value: 'oh the next log message'
  }, {
    key: 'more',
    value: 'stuff'
  }]
}];
var setup = function setup(propOverrides) {
  var props = _extends({
    logs: logs,
    isOpen: false,
    onItemToggle: jest.fn(),
    onToggle: function onToggle() {},
    openedItems: new Set([logs[1]]),
    timestamp: 5
  }, propOverrides);
  return render( /*#__PURE__*/_jsx(AccordianLogs, _extends({}, props)));
};
describe('AccordianLogs tests', function () {
  it('renders without exploding', function () {
    expect(function () {
      return setup();
    }).not.toThrow();
  });
  it('shows the number of log entries', function () {
    setup();
    expect(screen.getByRole('switch', {
      name: 'Events (2)'
    })).toBeInTheDocument();
  });
  it('hides log entries when not expanded', function () {
    setup({
      isOpen: false
    });
    expect(screen.queryByRole('table')).not.toBeInTheDocument();
  });
  it('shows log entries when expanded', function () {
    setup({
      isOpen: true
    });
    expect(screen.getByRole('table')).toBeInTheDocument();
    expect(screen.queryAllByRole('cell')).toHaveLength(6);
    expect(screen.getByText(/^something$/)).toBeInTheDocument();
    expect(screen.getByText(/^else$/)).toBeInTheDocument();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZW5kZXIiLCJzY3JlZW4iLCJSZWFjdCIsIkFjY29yZGlhbkxvZ3MiLCJqc3giLCJfanN4IiwibG9ncyIsInRpbWVzdGFtcCIsImZpZWxkcyIsImtleSIsInZhbHVlIiwic2V0dXAiLCJwcm9wT3ZlcnJpZGVzIiwicHJvcHMiLCJfZXh0ZW5kcyIsImlzT3BlbiIsIm9uSXRlbVRvZ2dsZSIsImplc3QiLCJmbiIsIm9uVG9nZ2xlIiwib3BlbmVkSXRlbXMiLCJTZXQiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0Iiwibm90IiwidG9UaHJvdyIsImdldEJ5Um9sZSIsIm5hbWUiLCJ0b0JlSW5UaGVEb2N1bWVudCIsInF1ZXJ5QnlSb2xlIiwicXVlcnlBbGxCeVJvbGUiLCJ0b0hhdmVMZW5ndGgiLCJnZXRCeVRleHQiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvVHJhY2VUaW1lbGluZVZpZXdlci9TcGFuRGV0YWlsL0FjY29yZGlhbkxvZ3MudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDE3IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbmltcG9ydCB7IHJlbmRlciwgc2NyZWVuIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgQWNjb3JkaWFuTG9ncywgeyBBY2NvcmRpYW5Mb2dzUHJvcHMgfSBmcm9tICcuL0FjY29yZGlhbkxvZ3MnO1xuXG5jb25zdCBsb2dzID0gW1xuICB7XG4gICAgdGltZXN0YW1wOiAxMCxcbiAgICBmaWVsZHM6IFtcbiAgICAgIHsga2V5OiAnbWVzc2FnZScsIHZhbHVlOiAnb2ggdGhlIGxvZyBtZXNzYWdlJyB9LFxuICAgICAgeyBrZXk6ICdzb21ldGhpbmcnLCB2YWx1ZTogJ2Vsc2UnIH0sXG4gICAgXSxcbiAgfSxcbiAge1xuICAgIHRpbWVzdGFtcDogMjAsXG4gICAgZmllbGRzOiBbXG4gICAgICB7IGtleTogJ21lc3NhZ2UnLCB2YWx1ZTogJ29oIHRoZSBuZXh0IGxvZyBtZXNzYWdlJyB9LFxuICAgICAgeyBrZXk6ICdtb3JlJywgdmFsdWU6ICdzdHVmZicgfSxcbiAgICBdLFxuICB9LFxuXTtcblxuY29uc3Qgc2V0dXAgPSAocHJvcE92ZXJyaWRlcz86IEFjY29yZGlhbkxvZ3NQcm9wcykgPT4ge1xuICBjb25zdCBwcm9wcyA9IHtcbiAgICBsb2dzLFxuICAgIGlzT3BlbjogZmFsc2UsXG4gICAgb25JdGVtVG9nZ2xlOiBqZXN0LmZuKCksXG4gICAgb25Ub2dnbGU6ICgpID0+IHt9LFxuICAgIG9wZW5lZEl0ZW1zOiBuZXcgU2V0KFtsb2dzWzFdXSksXG4gICAgdGltZXN0YW1wOiA1LFxuICAgIC4uLnByb3BPdmVycmlkZXMsXG4gIH07XG5cbiAgcmV0dXJuIHJlbmRlcig8QWNjb3JkaWFuTG9ncyB7Li4ucHJvcHN9IC8+KTtcbn07XG5cbmRlc2NyaWJlKCdBY2NvcmRpYW5Mb2dzIHRlc3RzJywgKCkgPT4ge1xuICBpdCgncmVuZGVycyB3aXRob3V0IGV4cGxvZGluZycsICgpID0+IHtcbiAgICBleHBlY3QoKCkgPT4gc2V0dXAoKSkubm90LnRvVGhyb3coKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3dzIHRoZSBudW1iZXIgb2YgbG9nIGVudHJpZXMnLCAoKSA9PiB7XG4gICAgc2V0dXAoKTtcblxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlSb2xlKCdzd2l0Y2gnLCB7IG5hbWU6ICdFdmVudHMgKDIpJyB9KSkudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgfSk7XG5cbiAgaXQoJ2hpZGVzIGxvZyBlbnRyaWVzIHdoZW4gbm90IGV4cGFuZGVkJywgKCkgPT4ge1xuICAgIHNldHVwKHsgaXNPcGVuOiBmYWxzZSB9IGFzIEFjY29yZGlhbkxvZ3NQcm9wcyk7XG5cbiAgICBleHBlY3Qoc2NyZWVuLnF1ZXJ5QnlSb2xlKCd0YWJsZScpKS5ub3QudG9CZUluVGhlRG9jdW1lbnQoKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3dzIGxvZyBlbnRyaWVzIHdoZW4gZXhwYW5kZWQnLCAoKSA9PiB7XG4gICAgc2V0dXAoeyBpc09wZW46IHRydWUgfSBhcyBBY2NvcmRpYW5Mb2dzUHJvcHMpO1xuXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVJvbGUoJ3RhYmxlJykpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgZXhwZWN0KHNjcmVlbi5xdWVyeUFsbEJ5Um9sZSgnY2VsbCcpKS50b0hhdmVMZW5ndGgoNik7XG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoL15zb21ldGhpbmckLykpLnRvQmVJblRoZURvY3VtZW50KCk7XG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoL15lbHNlJC8pKS50b0JlSW5UaGVEb2N1bWVudCgpO1xuICB9KTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0EsTUFBTSxFQUFFQyxNQUFNLFFBQVEsd0JBQXdCO0FBQ3ZELE9BQU9DLEtBQUssTUFBTSxPQUFPO0FBRXpCLE9BQU9DLGFBQWEsTUFBOEIsaUJBQWlCO0FBQUMsU0FBQUMsR0FBQSxJQUFBQyxJQUFBO0FBRXBFLElBQU1DLElBQUksR0FBRyxDQUNYO0VBQ0VDLFNBQVMsRUFBRSxFQUFFO0VBQ2JDLE1BQU0sRUFBRSxDQUNOO0lBQUVDLEdBQUcsRUFBRSxTQUFTO0lBQUVDLEtBQUssRUFBRTtFQUFxQixDQUFDLEVBQy9DO0lBQUVELEdBQUcsRUFBRSxXQUFXO0lBQUVDLEtBQUssRUFBRTtFQUFPLENBQUM7QUFFdkMsQ0FBQyxFQUNEO0VBQ0VILFNBQVMsRUFBRSxFQUFFO0VBQ2JDLE1BQU0sRUFBRSxDQUNOO0lBQUVDLEdBQUcsRUFBRSxTQUFTO0lBQUVDLEtBQUssRUFBRTtFQUEwQixDQUFDLEVBQ3BEO0lBQUVELEdBQUcsRUFBRSxNQUFNO0lBQUVDLEtBQUssRUFBRTtFQUFRLENBQUM7QUFFbkMsQ0FBQyxDQUNGO0FBRUQsSUFBTUMsS0FBSyxHQUFHLFNBQVJBLEtBQUtBLENBQUlDLGFBQWtDLEVBQUs7RUFDcEQsSUFBTUMsS0FBSyxHQUFBQyxRQUFBO0lBQ1RSLElBQUksRUFBSkEsSUFBSTtJQUNKUyxNQUFNLEVBQUUsS0FBSztJQUNiQyxZQUFZLEVBQUVDLElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUM7SUFDdkJDLFFBQVEsRUFBRSxTQUFBQSxTQUFBLEVBQU0sQ0FBQyxDQUFDO0lBQ2xCQyxXQUFXLEVBQUUsSUFBSUMsR0FBRyxDQUFDLENBQUNmLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQy9CQyxTQUFTLEVBQUU7RUFBQyxHQUNUSyxhQUFhLENBQ2pCO0VBRUQsT0FBT1osTUFBTSxlQUFDSyxJQUFBLENBQUNGLGFBQWEsRUFBQVcsUUFBQSxLQUFLRCxLQUFLLENBQUcsQ0FBQyxDQUFDO0FBQzdDLENBQUM7QUFFRFMsUUFBUSxDQUFDLHFCQUFxQixFQUFFLFlBQU07RUFDcENDLEVBQUUsQ0FBQywyQkFBMkIsRUFBRSxZQUFNO0lBQ3BDQyxNQUFNLENBQUM7TUFBQSxPQUFNYixLQUFLLENBQUMsQ0FBQztJQUFBLEVBQUMsQ0FBQ2MsR0FBRyxDQUFDQyxPQUFPLENBQUMsQ0FBQztFQUNyQyxDQUFDLENBQUM7RUFFRkgsRUFBRSxDQUFDLGlDQUFpQyxFQUFFLFlBQU07SUFDMUNaLEtBQUssQ0FBQyxDQUFDO0lBRVBhLE1BQU0sQ0FBQ3ZCLE1BQU0sQ0FBQzBCLFNBQVMsQ0FBQyxRQUFRLEVBQUU7TUFBRUMsSUFBSSxFQUFFO0lBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsaUJBQWlCLENBQUMsQ0FBQztFQUNoRixDQUFDLENBQUM7RUFFRk4sRUFBRSxDQUFDLHFDQUFxQyxFQUFFLFlBQU07SUFDOUNaLEtBQUssQ0FBQztNQUFFSSxNQUFNLEVBQUU7SUFBTSxDQUF1QixDQUFDO0lBRTlDUyxNQUFNLENBQUN2QixNQUFNLENBQUM2QixXQUFXLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQ0wsR0FBRyxDQUFDSSxpQkFBaUIsQ0FBQyxDQUFDO0VBQzdELENBQUMsQ0FBQztFQUVGTixFQUFFLENBQUMsaUNBQWlDLEVBQUUsWUFBTTtJQUMxQ1osS0FBSyxDQUFDO01BQUVJLE1BQU0sRUFBRTtJQUFLLENBQXVCLENBQUM7SUFFN0NTLE1BQU0sQ0FBQ3ZCLE1BQU0sQ0FBQzBCLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDRSxpQkFBaUIsQ0FBQyxDQUFDO0lBQ3JETCxNQUFNLENBQUN2QixNQUFNLENBQUM4QixjQUFjLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQ0MsWUFBWSxDQUFDLENBQUMsQ0FBQztJQUNyRFIsTUFBTSxDQUFDdkIsTUFBTSxDQUFDZ0MsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUNKLGlCQUFpQixDQUFDLENBQUM7SUFDM0RMLE1BQU0sQ0FBQ3ZCLE1BQU0sQ0FBQ2dDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDSixpQkFBaUIsQ0FBQyxDQUFDO0VBQ3hELENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==