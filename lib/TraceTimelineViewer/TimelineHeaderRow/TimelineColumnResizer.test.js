import _extends from "@babel/runtime/helpers/extends";
// Copyright (c) 2017 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import { fireEvent, render, screen } from '@testing-library/react';
import cx from 'classnames';
import React from 'react';
import TimelineColumnResizer, { getStyles } from './TimelineColumnResizer';
import { jsx as _jsx } from "react/jsx-runtime";
var mockOnChange = jest.fn();
describe('<TimelineColumnResizer>', function () {
  var props = {
    min: 0.1,
    max: 0.9,
    onChange: mockOnChange,
    position: 0.5,
    columnResizeHandleHeight: 10
  };
  beforeEach(function () {
    mockOnChange.mockReset();
    render( /*#__PURE__*/_jsx(TimelineColumnResizer, _extends({}, props)));
  });
  it('renders without exploding', function () {
    expect(screen.getByTestId('TimelineColumnResizer')).toBeTruthy();
    expect(screen.getByTestId('TimelineColumnResizer--gripIcon')).toBeTruthy();
    expect(screen.getByTestId('TimelineColumnResizer--dragger')).toBeTruthy();
  });
  it('does not render a dragging indicator when not dragging', function () {
    var styles = getStyles();
    expect(screen.getByTestId('TimelineColumnResizer--dragger')).toHaveStyle("right: " + undefined);
    expect(screen.getByTestId('TimelineColumnResizer--dragger')).toHaveClass(styles.dragger);
  });
  it('renders a dragging indicator when dragging', function () {
    var styles = getStyles();
    fireEvent.mouseDown(screen.getByTestId('TimelineColumnResizer--dragger'), {
      clientX: 0
    });
    fireEvent.mouseMove(screen.getByTestId('TimelineColumnResizer--dragger'), {
      clientX: -5
    });
    expect(screen.getByTestId('TimelineColumnResizer--dragger')).toHaveClass(cx(styles.dragger, styles.draggerDragging, styles.draggerDraggingLeft));
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJmaXJlRXZlbnQiLCJyZW5kZXIiLCJzY3JlZW4iLCJjeCIsIlJlYWN0IiwiVGltZWxpbmVDb2x1bW5SZXNpemVyIiwiZ2V0U3R5bGVzIiwianN4IiwiX2pzeCIsIm1vY2tPbkNoYW5nZSIsImplc3QiLCJmbiIsImRlc2NyaWJlIiwicHJvcHMiLCJtaW4iLCJtYXgiLCJvbkNoYW5nZSIsInBvc2l0aW9uIiwiY29sdW1uUmVzaXplSGFuZGxlSGVpZ2h0IiwiYmVmb3JlRWFjaCIsIm1vY2tSZXNldCIsIl9leHRlbmRzIiwiaXQiLCJleHBlY3QiLCJnZXRCeVRlc3RJZCIsInRvQmVUcnV0aHkiLCJzdHlsZXMiLCJ0b0hhdmVTdHlsZSIsInVuZGVmaW5lZCIsInRvSGF2ZUNsYXNzIiwiZHJhZ2dlciIsIm1vdXNlRG93biIsImNsaWVudFgiLCJtb3VzZU1vdmUiLCJkcmFnZ2VyRHJhZ2dpbmciLCJkcmFnZ2VyRHJhZ2dpbmdMZWZ0Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL1RyYWNlVGltZWxpbmVWaWV3ZXIvVGltZWxpbmVIZWFkZXJSb3cvVGltZWxpbmVDb2x1bW5SZXNpemVyLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxNyBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG5pbXBvcnQgeyBmaXJlRXZlbnQsIHJlbmRlciwgc2NyZWVuIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCc7XG5pbXBvcnQgY3ggZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgVGltZWxpbmVDb2x1bW5SZXNpemVyLCB7IGdldFN0eWxlcywgVGltZWxpbmVDb2x1bW5SZXNpemVyUHJvcHMgfSBmcm9tICcuL1RpbWVsaW5lQ29sdW1uUmVzaXplcic7XG5cbmNvbnN0IG1vY2tPbkNoYW5nZSA9IGplc3QuZm4oKTtcblxuZGVzY3JpYmUoJzxUaW1lbGluZUNvbHVtblJlc2l6ZXI+JywgKCkgPT4ge1xuICBjb25zdCBwcm9wczogVGltZWxpbmVDb2x1bW5SZXNpemVyUHJvcHMgPSB7XG4gICAgbWluOiAwLjEsXG4gICAgbWF4OiAwLjksXG4gICAgb25DaGFuZ2U6IG1vY2tPbkNoYW5nZSxcbiAgICBwb3NpdGlvbjogMC41LFxuICAgIGNvbHVtblJlc2l6ZUhhbmRsZUhlaWdodDogMTAsXG4gIH07XG5cbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgbW9ja09uQ2hhbmdlLm1vY2tSZXNldCgpO1xuICAgIHJlbmRlcig8VGltZWxpbmVDb2x1bW5SZXNpemVyIHsuLi5wcm9wc30gLz4pO1xuICB9KTtcblxuICBpdCgncmVuZGVycyB3aXRob3V0IGV4cGxvZGluZycsICgpID0+IHtcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdUaW1lbGluZUNvbHVtblJlc2l6ZXInKSkudG9CZVRydXRoeSgpO1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXN0SWQoJ1RpbWVsaW5lQ29sdW1uUmVzaXplci0tZ3JpcEljb24nKSkudG9CZVRydXRoeSgpO1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXN0SWQoJ1RpbWVsaW5lQ29sdW1uUmVzaXplci0tZHJhZ2dlcicpKS50b0JlVHJ1dGh5KCk7XG4gIH0pO1xuXG4gIGl0KCdkb2VzIG5vdCByZW5kZXIgYSBkcmFnZ2luZyBpbmRpY2F0b3Igd2hlbiBub3QgZHJhZ2dpbmcnLCAoKSA9PiB7XG4gICAgY29uc3Qgc3R5bGVzID0gZ2V0U3R5bGVzKCk7XG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRlc3RJZCgnVGltZWxpbmVDb2x1bW5SZXNpemVyLS1kcmFnZ2VyJykpLnRvSGF2ZVN0eWxlKGByaWdodDogJHt1bmRlZmluZWR9YCk7XG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRlc3RJZCgnVGltZWxpbmVDb2x1bW5SZXNpemVyLS1kcmFnZ2VyJykpLnRvSGF2ZUNsYXNzKHN0eWxlcy5kcmFnZ2VyKTtcbiAgfSk7XG5cbiAgaXQoJ3JlbmRlcnMgYSBkcmFnZ2luZyBpbmRpY2F0b3Igd2hlbiBkcmFnZ2luZycsICgpID0+IHtcbiAgICBjb25zdCBzdHlsZXMgPSBnZXRTdHlsZXMoKTtcbiAgICBmaXJlRXZlbnQubW91c2VEb3duKHNjcmVlbi5nZXRCeVRlc3RJZCgnVGltZWxpbmVDb2x1bW5SZXNpemVyLS1kcmFnZ2VyJyksIHsgY2xpZW50WDogMCB9KTtcbiAgICBmaXJlRXZlbnQubW91c2VNb3ZlKHNjcmVlbi5nZXRCeVRlc3RJZCgnVGltZWxpbmVDb2x1bW5SZXNpemVyLS1kcmFnZ2VyJyksIHsgY2xpZW50WDogLTUgfSk7XG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRlc3RJZCgnVGltZWxpbmVDb2x1bW5SZXNpemVyLS1kcmFnZ2VyJykpLnRvSGF2ZUNsYXNzKFxuICAgICAgY3goc3R5bGVzLmRyYWdnZXIsIHN0eWxlcy5kcmFnZ2VyRHJhZ2dpbmcsIHN0eWxlcy5kcmFnZ2VyRHJhZ2dpbmdMZWZ0KVxuICAgICk7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTQSxTQUFTLEVBQUVDLE1BQU0sRUFBRUMsTUFBTSxRQUFRLHdCQUF3QjtBQUNsRSxPQUFPQyxFQUFFLE1BQU0sWUFBWTtBQUMzQixPQUFPQyxLQUFLLE1BQU0sT0FBTztBQUV6QixPQUFPQyxxQkFBcUIsSUFBSUMsU0FBUyxRQUFvQyx5QkFBeUI7QUFBQyxTQUFBQyxHQUFBLElBQUFDLElBQUE7QUFFdkcsSUFBTUMsWUFBWSxHQUFHQyxJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDO0FBRTlCQyxRQUFRLENBQUMseUJBQXlCLEVBQUUsWUFBTTtFQUN4QyxJQUFNQyxLQUFpQyxHQUFHO0lBQ3hDQyxHQUFHLEVBQUUsR0FBRztJQUNSQyxHQUFHLEVBQUUsR0FBRztJQUNSQyxRQUFRLEVBQUVQLFlBQVk7SUFDdEJRLFFBQVEsRUFBRSxHQUFHO0lBQ2JDLHdCQUF3QixFQUFFO0VBQzVCLENBQUM7RUFFREMsVUFBVSxDQUFDLFlBQU07SUFDZlYsWUFBWSxDQUFDVyxTQUFTLENBQUMsQ0FBQztJQUN4Qm5CLE1BQU0sZUFBQ08sSUFBQSxDQUFDSCxxQkFBcUIsRUFBQWdCLFFBQUEsS0FBS1IsS0FBSyxDQUFHLENBQUMsQ0FBQztFQUM5QyxDQUFDLENBQUM7RUFFRlMsRUFBRSxDQUFDLDJCQUEyQixFQUFFLFlBQU07SUFDcENDLE1BQU0sQ0FBQ3JCLE1BQU0sQ0FBQ3NCLFdBQVcsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLENBQUNDLFVBQVUsQ0FBQyxDQUFDO0lBQ2hFRixNQUFNLENBQUNyQixNQUFNLENBQUNzQixXQUFXLENBQUMsaUNBQWlDLENBQUMsQ0FBQyxDQUFDQyxVQUFVLENBQUMsQ0FBQztJQUMxRUYsTUFBTSxDQUFDckIsTUFBTSxDQUFDc0IsV0FBVyxDQUFDLGdDQUFnQyxDQUFDLENBQUMsQ0FBQ0MsVUFBVSxDQUFDLENBQUM7RUFDM0UsQ0FBQyxDQUFDO0VBRUZILEVBQUUsQ0FBQyx3REFBd0QsRUFBRSxZQUFNO0lBQ2pFLElBQU1JLE1BQU0sR0FBR3BCLFNBQVMsQ0FBQyxDQUFDO0lBQzFCaUIsTUFBTSxDQUFDckIsTUFBTSxDQUFDc0IsV0FBVyxDQUFDLGdDQUFnQyxDQUFDLENBQUMsQ0FBQ0csV0FBVyxhQUFXQyxTQUFXLENBQUM7SUFDL0ZMLE1BQU0sQ0FBQ3JCLE1BQU0sQ0FBQ3NCLFdBQVcsQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDLENBQUNLLFdBQVcsQ0FBQ0gsTUFBTSxDQUFDSSxPQUFPLENBQUM7RUFDMUYsQ0FBQyxDQUFDO0VBRUZSLEVBQUUsQ0FBQyw0Q0FBNEMsRUFBRSxZQUFNO0lBQ3JELElBQU1JLE1BQU0sR0FBR3BCLFNBQVMsQ0FBQyxDQUFDO0lBQzFCTixTQUFTLENBQUMrQixTQUFTLENBQUM3QixNQUFNLENBQUNzQixXQUFXLENBQUMsZ0NBQWdDLENBQUMsRUFBRTtNQUFFUSxPQUFPLEVBQUU7SUFBRSxDQUFDLENBQUM7SUFDekZoQyxTQUFTLENBQUNpQyxTQUFTLENBQUMvQixNQUFNLENBQUNzQixXQUFXLENBQUMsZ0NBQWdDLENBQUMsRUFBRTtNQUFFUSxPQUFPLEVBQUUsQ0FBQztJQUFFLENBQUMsQ0FBQztJQUMxRlQsTUFBTSxDQUFDckIsTUFBTSxDQUFDc0IsV0FBVyxDQUFDLGdDQUFnQyxDQUFDLENBQUMsQ0FBQ0ssV0FBVyxDQUN0RTFCLEVBQUUsQ0FBQ3VCLE1BQU0sQ0FBQ0ksT0FBTyxFQUFFSixNQUFNLENBQUNRLGVBQWUsRUFBRVIsTUFBTSxDQUFDUyxtQkFBbUIsQ0FDdkUsQ0FBQztFQUNILENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==