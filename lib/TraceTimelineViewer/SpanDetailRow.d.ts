import React from 'react';
import { GrafanaTheme2, LinkModel, TimeZone } from '@grafana/data';
import { SpanLinkFunc } from '../types';
import { TraceLog, TraceSpan, TraceKeyValuePair, TraceLink, TraceSpanReference } from '../types/trace';
import DetailState from './SpanDetail/DetailState';
import { TopOfViewRefType } from './VirtualizedTraceView';
export type SpanDetailRowProps = {
    color: string;
    columnDivision: number;
    detailState: DetailState;
    onDetailToggled: (spanID: string) => void;
    linksGetter: (span: TraceSpan, links: TraceKeyValuePair[], index: number) => TraceLink[];
    logItemToggle: (spanID: string, log: TraceLog) => void;
    logsToggle: (spanID: string) => void;
    processToggle: (spanID: string) => void;
    referenceItemToggle: (spanID: string, reference: TraceSpanReference) => void;
    referencesToggle: (spanID: string) => void;
    warningsToggle: (spanID: string) => void;
    stackTracesToggle: (spanID: string) => void;
    span: TraceSpan;
    timeZone: TimeZone;
    tagsToggle: (spanID: string) => void;
    traceStartTime: number;
    hoverIndentGuideIds: Set<string>;
    addHoverIndentGuideId: (spanID: string) => void;
    removeHoverIndentGuideId: (spanID: string) => void;
    theme: GrafanaTheme2;
    createSpanLink?: SpanLinkFunc;
    focusedSpanId?: string;
    createFocusSpanLink: (traceId: string, spanId: string) => LinkModel;
    topOfViewRefType?: TopOfViewRefType;
    datasourceType: string;
};
export declare class UnthemedSpanDetailRow extends React.PureComponent<SpanDetailRowProps> {
    _detailToggle: () => void;
    _linksGetter: (items: TraceKeyValuePair[], itemIndex: number) => TraceLink[];
    render(): JSX.Element;
}
declare const _default: React.FunctionComponent<{
    span: TraceSpan;
    color: string;
    linksGetter: (span: TraceSpan, links: TraceKeyValuePair[], index: number) => TraceLink[];
    traceStartTime: number;
    datasourceType: string;
    hoverIndentGuideIds: Set<string>;
    addHoverIndentGuideId: (spanID: string) => void;
    removeHoverIndentGuideId: (spanID: string) => void;
    columnDivision: number;
    onDetailToggled: (spanID: string) => void;
    createSpanLink?: SpanLinkFunc;
    createFocusSpanLink: (traceId: string, spanId: string) => LinkModel<any>;
    detailState: DetailState;
    logItemToggle: (spanID: string, log: TraceLog) => void;
    logsToggle: (spanID: string) => void;
    processToggle: (spanID: string) => void;
    tagsToggle: (spanID: string) => void;
    warningsToggle: (spanID: string) => void;
    stackTracesToggle: (spanID: string) => void;
    referencesToggle: (spanID: string) => void;
    referenceItemToggle: (spanID: string, reference: TraceSpanReference) => void;
    topOfViewRefType?: TopOfViewRefType;
    timeZone: string;
    focusedSpanId?: string;
}>;
export default _default;
