// Copyright (c) 2017 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import tinycolor from 'tinycolor2';
/**
 * Tries to get a dark variant color. Either by simply inverting the luminosity and darkening or lightening the color
 * a bit, or if base is provided, tries 2 variants of lighter and darker colors and checks which is more readable with
 * the base.
 * @param theme
 * @param hex
 * @param base
 */
export function autoColor(theme, hex, base) {
  if (theme.isLight) {
    return hex;
  } else {
    if (base) {
      var _color = tinycolor(hex);
      return tinycolor.mostReadable(base, [_color.clone().lighten(25), _color.clone().lighten(10), _color, _color.clone().darken(10), _color.clone().darken(25)], {
        includeFallbackColors: false
      }).toHex8String();
    }
    var color = tinycolor(hex).toHsl();
    color.l = 1 - color.l;
    var newColor = tinycolor(color);
    return newColor.isLight() ? newColor.darken(5).toHex8String() : newColor.lighten(5).toHex8String();
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ0aW55Y29sb3IiLCJhdXRvQ29sb3IiLCJ0aGVtZSIsImhleCIsImJhc2UiLCJpc0xpZ2h0IiwiY29sb3IiLCJtb3N0UmVhZGFibGUiLCJjbG9uZSIsImxpZ2h0ZW4iLCJkYXJrZW4iLCJpbmNsdWRlRmFsbGJhY2tDb2xvcnMiLCJ0b0hleDhTdHJpbmciLCJ0b0hzbCIsImwiLCJuZXdDb2xvciJdLCJzb3VyY2VzIjpbIi4uL3NyYy9UaGVtZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDE3IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbmltcG9ydCB0aW55Y29sb3IgZnJvbSAndGlueWNvbG9yMic7XG5cbmltcG9ydCB7IEdyYWZhbmFUaGVtZTIgfSBmcm9tICdAZ3JhZmFuYS9kYXRhJztcblxuLyoqXG4gKiBUcmllcyB0byBnZXQgYSBkYXJrIHZhcmlhbnQgY29sb3IuIEVpdGhlciBieSBzaW1wbHkgaW52ZXJ0aW5nIHRoZSBsdW1pbm9zaXR5IGFuZCBkYXJrZW5pbmcgb3IgbGlnaHRlbmluZyB0aGUgY29sb3JcbiAqIGEgYml0LCBvciBpZiBiYXNlIGlzIHByb3ZpZGVkLCB0cmllcyAyIHZhcmlhbnRzIG9mIGxpZ2h0ZXIgYW5kIGRhcmtlciBjb2xvcnMgYW5kIGNoZWNrcyB3aGljaCBpcyBtb3JlIHJlYWRhYmxlIHdpdGhcbiAqIHRoZSBiYXNlLlxuICogQHBhcmFtIHRoZW1lXG4gKiBAcGFyYW0gaGV4XG4gKiBAcGFyYW0gYmFzZVxuICovXG5leHBvcnQgZnVuY3Rpb24gYXV0b0NvbG9yKHRoZW1lOiBHcmFmYW5hVGhlbWUyLCBoZXg6IHN0cmluZywgYmFzZT86IHN0cmluZykge1xuICBpZiAodGhlbWUuaXNMaWdodCkge1xuICAgIHJldHVybiBoZXg7XG4gIH0gZWxzZSB7XG4gICAgaWYgKGJhc2UpIHtcbiAgICAgIGNvbnN0IGNvbG9yID0gdGlueWNvbG9yKGhleCk7XG4gICAgICByZXR1cm4gdGlueWNvbG9yXG4gICAgICAgIC5tb3N0UmVhZGFibGUoXG4gICAgICAgICAgYmFzZSxcbiAgICAgICAgICBbXG4gICAgICAgICAgICBjb2xvci5jbG9uZSgpLmxpZ2h0ZW4oMjUpLFxuICAgICAgICAgICAgY29sb3IuY2xvbmUoKS5saWdodGVuKDEwKSxcbiAgICAgICAgICAgIGNvbG9yLFxuICAgICAgICAgICAgY29sb3IuY2xvbmUoKS5kYXJrZW4oMTApLFxuICAgICAgICAgICAgY29sb3IuY2xvbmUoKS5kYXJrZW4oMjUpLFxuICAgICAgICAgIF0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgaW5jbHVkZUZhbGxiYWNrQ29sb3JzOiBmYWxzZSxcbiAgICAgICAgICB9XG4gICAgICAgIClcbiAgICAgICAgLnRvSGV4OFN0cmluZygpO1xuICAgIH1cbiAgICBjb25zdCBjb2xvciA9IHRpbnljb2xvcihoZXgpLnRvSHNsKCk7XG4gICAgY29sb3IubCA9IDEgLSBjb2xvci5sO1xuICAgIGNvbnN0IG5ld0NvbG9yID0gdGlueWNvbG9yKGNvbG9yKTtcbiAgICByZXR1cm4gbmV3Q29sb3IuaXNMaWdodCgpID8gbmV3Q29sb3IuZGFya2VuKDUpLnRvSGV4OFN0cmluZygpIDogbmV3Q29sb3IubGlnaHRlbig1KS50b0hleDhTdHJpbmcoKTtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPQSxTQUFTLE1BQU0sWUFBWTtBQUlsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxTQUFTQyxTQUFTQSxDQUFDQyxLQUFvQixFQUFFQyxHQUFXLEVBQUVDLElBQWEsRUFBRTtFQUMxRSxJQUFJRixLQUFLLENBQUNHLE9BQU8sRUFBRTtJQUNqQixPQUFPRixHQUFHO0VBQ1osQ0FBQyxNQUFNO0lBQ0wsSUFBSUMsSUFBSSxFQUFFO01BQ1IsSUFBTUUsTUFBSyxHQUFHTixTQUFTLENBQUNHLEdBQUcsQ0FBQztNQUM1QixPQUFPSCxTQUFTLENBQ2JPLFlBQVksQ0FDWEgsSUFBSSxFQUNKLENBQ0VFLE1BQUssQ0FBQ0UsS0FBSyxDQUFDLENBQUMsQ0FBQ0MsT0FBTyxDQUFDLEVBQUUsQ0FBQyxFQUN6QkgsTUFBSyxDQUFDRSxLQUFLLENBQUMsQ0FBQyxDQUFDQyxPQUFPLENBQUMsRUFBRSxDQUFDLEVBQ3pCSCxNQUFLLEVBQ0xBLE1BQUssQ0FBQ0UsS0FBSyxDQUFDLENBQUMsQ0FBQ0UsTUFBTSxDQUFDLEVBQUUsQ0FBQyxFQUN4QkosTUFBSyxDQUFDRSxLQUFLLENBQUMsQ0FBQyxDQUFDRSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQ3pCLEVBQ0Q7UUFDRUMscUJBQXFCLEVBQUU7TUFDekIsQ0FDRixDQUFDLENBQ0FDLFlBQVksQ0FBQyxDQUFDO0lBQ25CO0lBQ0EsSUFBTU4sS0FBSyxHQUFHTixTQUFTLENBQUNHLEdBQUcsQ0FBQyxDQUFDVSxLQUFLLENBQUMsQ0FBQztJQUNwQ1AsS0FBSyxDQUFDUSxDQUFDLEdBQUcsQ0FBQyxHQUFHUixLQUFLLENBQUNRLENBQUM7SUFDckIsSUFBTUMsUUFBUSxHQUFHZixTQUFTLENBQUNNLEtBQUssQ0FBQztJQUNqQyxPQUFPUyxRQUFRLENBQUNWLE9BQU8sQ0FBQyxDQUFDLEdBQUdVLFFBQVEsQ0FBQ0wsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDRSxZQUFZLENBQUMsQ0FBQyxHQUFHRyxRQUFRLENBQUNOLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQ0csWUFBWSxDQUFDLENBQUM7RUFDcEc7QUFDRiIsImlnbm9yZUxpc3QiOltdfQ==