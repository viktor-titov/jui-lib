import _extends from "@babel/runtime/helpers/extends";
// Copyright (c) 2017 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import { render, screen, fireEvent, within } from '@testing-library/react';
import React from 'react';
import Scrubber from './Scrubber';
import { jsx as _jsx } from "react/jsx-runtime";
describe('<Scrubber>', function () {
  var defaultProps = {
    position: 0
  };
  var rerender;
  beforeEach(function () {
    var _render = render( /*#__PURE__*/_jsx("svg", {
      children: /*#__PURE__*/_jsx(Scrubber, _extends({}, defaultProps))
    }));
    rerender = _render.rerender;
  });
  it('contains the proper svg components', function () {
    var scrubberComponent = screen.getByTestId('scrubber-component');
    var scrubberComponentG = screen.getByTestId('scrubber-component-g');
    expect(within(scrubberComponent).getByTestId('scrubber-component-g')).toBeTruthy();
    expect(within(scrubberComponent).getByTestId('scrubber-component-line')).toBeTruthy();
    expect(within(scrubberComponentG).getByTestId('scrubber-component-rect-1')).toBeTruthy();
    expect(within(scrubberComponentG).getByTestId('scrubber-component-rect-2')).toBeTruthy();
  });
  it('calculates the correct x% for a timestamp', function () {
    rerender( /*#__PURE__*/_jsx("svg", {
      children: /*#__PURE__*/_jsx(Scrubber, _extends({}, defaultProps, {
        position: 0.5
      }))
    }));
    var line = screen.getByTestId('scrubber-component-line');
    var rect = screen.getByTestId('scrubber-component-rect-1');
    expect(line).toHaveAttribute('x1', '50%');
    expect(line).toHaveAttribute('x2', '50%');
    expect(rect).toHaveAttribute('x', '50%');
  });
  it('supports onMouseDown', function () {
    expect(fireEvent.mouseDown(screen.getByTestId('scrubber-component-g'))).toBeTruthy();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZW5kZXIiLCJzY3JlZW4iLCJmaXJlRXZlbnQiLCJ3aXRoaW4iLCJSZWFjdCIsIlNjcnViYmVyIiwianN4IiwiX2pzeCIsImRlc2NyaWJlIiwiZGVmYXVsdFByb3BzIiwicG9zaXRpb24iLCJyZXJlbmRlciIsImJlZm9yZUVhY2giLCJfcmVuZGVyIiwiY2hpbGRyZW4iLCJfZXh0ZW5kcyIsIml0Iiwic2NydWJiZXJDb21wb25lbnQiLCJnZXRCeVRlc3RJZCIsInNjcnViYmVyQ29tcG9uZW50RyIsImV4cGVjdCIsInRvQmVUcnV0aHkiLCJsaW5lIiwicmVjdCIsInRvSGF2ZUF0dHJpYnV0ZSIsIm1vdXNlRG93biJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9UcmFjZVBhZ2VIZWFkZXIvU3BhbkdyYXBoL1NjcnViYmVyLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxNyBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG5pbXBvcnQgeyByZW5kZXIsIHNjcmVlbiwgZmlyZUV2ZW50LCB3aXRoaW4gfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0JztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBTY3J1YmJlciwgeyBTY3J1YmJlclByb3BzIH0gZnJvbSAnLi9TY3J1YmJlcic7XG5cbmRlc2NyaWJlKCc8U2NydWJiZXI+JywgKCkgPT4ge1xuICBjb25zdCBkZWZhdWx0UHJvcHMgPSB7XG4gICAgcG9zaXRpb246IDAsXG4gIH07XG5cbiAgbGV0IHJlcmVuZGVyOiAoYXJnMDogSlNYLkVsZW1lbnQpID0+IHZvaWQ7XG5cbiAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgKHsgcmVyZW5kZXIgfSA9IHJlbmRlcihcbiAgICAgIDxzdmc+XG4gICAgICAgIDxTY3J1YmJlciB7Li4uKGRlZmF1bHRQcm9wcyBhcyBTY3J1YmJlclByb3BzKX0gLz5cbiAgICAgIDwvc3ZnPlxuICAgICkpO1xuICB9KTtcblxuICBpdCgnY29udGFpbnMgdGhlIHByb3BlciBzdmcgY29tcG9uZW50cycsICgpID0+IHtcbiAgICBjb25zdCBzY3J1YmJlckNvbXBvbmVudCA9IHNjcmVlbi5nZXRCeVRlc3RJZCgnc2NydWJiZXItY29tcG9uZW50Jyk7XG4gICAgY29uc3Qgc2NydWJiZXJDb21wb25lbnRHID0gc2NyZWVuLmdldEJ5VGVzdElkKCdzY3J1YmJlci1jb21wb25lbnQtZycpO1xuXG4gICAgZXhwZWN0KHdpdGhpbihzY3J1YmJlckNvbXBvbmVudCkuZ2V0QnlUZXN0SWQoJ3NjcnViYmVyLWNvbXBvbmVudC1nJykpLnRvQmVUcnV0aHkoKTtcbiAgICBleHBlY3Qod2l0aGluKHNjcnViYmVyQ29tcG9uZW50KS5nZXRCeVRlc3RJZCgnc2NydWJiZXItY29tcG9uZW50LWxpbmUnKSkudG9CZVRydXRoeSgpO1xuICAgIGV4cGVjdCh3aXRoaW4oc2NydWJiZXJDb21wb25lbnRHKS5nZXRCeVRlc3RJZCgnc2NydWJiZXItY29tcG9uZW50LXJlY3QtMScpKS50b0JlVHJ1dGh5KCk7XG4gICAgZXhwZWN0KHdpdGhpbihzY3J1YmJlckNvbXBvbmVudEcpLmdldEJ5VGVzdElkKCdzY3J1YmJlci1jb21wb25lbnQtcmVjdC0yJykpLnRvQmVUcnV0aHkoKTtcbiAgfSk7XG5cbiAgaXQoJ2NhbGN1bGF0ZXMgdGhlIGNvcnJlY3QgeCUgZm9yIGEgdGltZXN0YW1wJywgKCkgPT4ge1xuICAgIHJlcmVuZGVyKFxuICAgICAgPHN2Zz5cbiAgICAgICAgPFNjcnViYmVyIHsuLi4oZGVmYXVsdFByb3BzIGFzIFNjcnViYmVyUHJvcHMpfSBwb3NpdGlvbj17MC41fSAvPlxuICAgICAgPC9zdmc+XG4gICAgKTtcbiAgICBjb25zdCBsaW5lID0gc2NyZWVuLmdldEJ5VGVzdElkKCdzY3J1YmJlci1jb21wb25lbnQtbGluZScpO1xuICAgIGNvbnN0IHJlY3QgPSBzY3JlZW4uZ2V0QnlUZXN0SWQoJ3NjcnViYmVyLWNvbXBvbmVudC1yZWN0LTEnKTtcblxuICAgIGV4cGVjdChsaW5lKS50b0hhdmVBdHRyaWJ1dGUoJ3gxJywgJzUwJScpO1xuICAgIGV4cGVjdChsaW5lKS50b0hhdmVBdHRyaWJ1dGUoJ3gyJywgJzUwJScpO1xuICAgIGV4cGVjdChyZWN0KS50b0hhdmVBdHRyaWJ1dGUoJ3gnLCAnNTAlJyk7XG4gIH0pO1xuXG4gIGl0KCdzdXBwb3J0cyBvbk1vdXNlRG93bicsICgpID0+IHtcbiAgICBleHBlY3QoZmlyZUV2ZW50Lm1vdXNlRG93bihzY3JlZW4uZ2V0QnlUZXN0SWQoJ3NjcnViYmVyLWNvbXBvbmVudC1nJykpKS50b0JlVHJ1dGh5KCk7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFD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