// Copyright (c) 2017 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

export function localeStringComparator(itemA, itemB) {
  return itemA.localeCompare(itemB);
}
export function numberSortComparator(itemA, itemB) {
  return itemA - itemB;
}
export function classNameForSortDir(dir) {
  return "sorted " + (dir === 1 ? 'ascending' : 'descending');
}
export function getNewSortForClick(prevSort, column) {
  var _column$defaultDir = column.defaultDir,
    defaultDir = _column$defaultDir === void 0 ? 1 : _column$defaultDir;
  return {
    key: column.name,
    dir: prevSort.key === column.name ? -1 * prevSort.dir : defaultDir
  };
}
export function createSortClickHandler(column, currentSortKey, currentSortDir, updateSort) {
  return function onClickSortingElement() {
    var _getNewSortForClick = getNewSortForClick({
        key: currentSortKey,
        dir: currentSortDir
      }, column),
      key = _getNewSortForClick.key,
      dir = _getNewSortForClick.dir;
    updateSort(key, dir);
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJsb2NhbGVTdHJpbmdDb21wYXJhdG9yIiwiaXRlbUEiLCJpdGVtQiIsImxvY2FsZUNvbXBhcmUiLCJudW1iZXJTb3J0Q29tcGFyYXRvciIsImNsYXNzTmFtZUZvclNvcnREaXIiLCJkaXIiLCJnZXROZXdTb3J0Rm9yQ2xpY2siLCJwcmV2U29ydCIsImNvbHVtbiIsIl9jb2x1bW4kZGVmYXVsdERpciIsImRlZmF1bHREaXIiLCJrZXkiLCJuYW1lIiwiY3JlYXRlU29ydENsaWNrSGFuZGxlciIsImN1cnJlbnRTb3J0S2V5IiwiY3VycmVudFNvcnREaXIiLCJ1cGRhdGVTb3J0Iiwib25DbGlja1NvcnRpbmdFbGVtZW50IiwiX2dldE5ld1NvcnRGb3JDbGljayJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9zb3J0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxNyBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG5pbXBvcnQgc2lub24gZnJvbSAnc2lub24nO1xuXG5leHBvcnQgZnVuY3Rpb24gbG9jYWxlU3RyaW5nQ29tcGFyYXRvcihpdGVtQTogc3RyaW5nLCBpdGVtQjogc3RyaW5nKSB7XG4gIHJldHVybiBpdGVtQS5sb2NhbGVDb21wYXJlKGl0ZW1CKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG51bWJlclNvcnRDb21wYXJhdG9yKGl0ZW1BOiBudW1iZXIsIGl0ZW1COiBudW1iZXIpIHtcbiAgcmV0dXJuIGl0ZW1BIC0gaXRlbUI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjbGFzc05hbWVGb3JTb3J0RGlyKGRpcjogbnVtYmVyKSB7XG4gIHJldHVybiBgc29ydGVkICR7ZGlyID09PSAxID8gJ2FzY2VuZGluZycgOiAnZGVzY2VuZGluZyd9YDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldE5ld1NvcnRGb3JDbGljayhcbiAgcHJldlNvcnQ6IHsga2V5OiBzdHJpbmc7IGRpcjogbnVtYmVyIH0sXG4gIGNvbHVtbjogeyBuYW1lOiBzdHJpbmc7IGRlZmF1bHREaXI/OiBudW1iZXIgfVxuKSB7XG4gIGNvbnN0IHsgZGVmYXVsdERpciA9IDEgfSA9IGNvbHVtbjtcblxuICByZXR1cm4ge1xuICAgIGtleTogY29sdW1uLm5hbWUsXG4gICAgZGlyOiBwcmV2U29ydC5rZXkgPT09IGNvbHVtbi5uYW1lID8gLTEgKiBwcmV2U29ydC5kaXIgOiBkZWZhdWx0RGlyLFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU29ydENsaWNrSGFuZGxlcihcbiAgY29sdW1uOiB7IG5hbWU6IHN0cmluZyB9LFxuICBjdXJyZW50U29ydEtleTogc3RyaW5nLFxuICBjdXJyZW50U29ydERpcjogbnVtYmVyLFxuICB1cGRhdGVTb3J0OiBzaW5vbi5TaW5vblNweVxuKSB7XG4gIHJldHVybiBmdW5jdGlvbiBvbkNsaWNrU29ydGluZ0VsZW1lbnQoKSB7XG4gICAgY29uc3QgeyBrZXksIGRpciB9ID0gZ2V0TmV3U29ydEZvckNsaWNrKHsga2V5OiBjdXJyZW50U29ydEtleSwgZGlyOiBjdXJyZW50U29ydERpciB9LCBjb2x1bW4pO1xuICAgIHVwZGF0ZVNvcnQoa2V5LCBkaXIpO1xuICB9O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFJQSxPQUFPLFNBQVNBLHNCQUFzQkEsQ0FBQ0MsS0FBYSxFQUFFQyxLQUFhLEVBQUU7RUFDbkUsT0FBT0QsS0FBSyxDQUFDRSxhQUFhLENBQUNELEtBQUssQ0FBQztBQUNuQztBQUVBLE9BQU8sU0FBU0Usb0JBQW9CQSxDQUFDSCxLQUFhLEVBQUVDLEtBQWEsRUFBRTtFQUNqRSxPQUFPRCxLQUFLLEdBQUdDLEtBQUs7QUFDdEI7QUFFQSxPQUFPLFNBQVNHLG1CQUFtQkEsQ0FBQ0MsR0FBVyxFQUFFO0VBQy9DLG9CQUFpQkEsR0FBRyxLQUFLLENBQUMsR0FBRyxXQUFXLEdBQUcsWUFBWTtBQUN6RDtBQUVBLE9BQU8sU0FBU0Msa0JBQWtCQSxDQUNoQ0MsUUFBc0MsRUFDdENDLE1BQTZDLEVBQzdDO0VBQ0EsSUFBQUMsa0JBQUEsR0FBMkJELE1BQU0sQ0FBekJFLFVBQVU7SUFBVkEsVUFBVSxHQUFBRCxrQkFBQSxjQUFHLENBQUMsR0FBQUEsa0JBQUE7RUFFdEIsT0FBTztJQUNMRSxHQUFHLEVBQUVILE1BQU0sQ0FBQ0ksSUFBSTtJQUNoQlAsR0FBRyxFQUFFRSxRQUFRLENBQUNJLEdBQUcsS0FBS0gsTUFBTSxDQUFDSSxJQUFJLEdBQUcsQ0FBQyxDQUFDLEdBQUdMLFFBQVEsQ0FBQ0YsR0FBRyxHQUFHSztFQUMxRCxDQUFDO0FBQ0g7QUFFQSxPQUFPLFNBQVNHLHNCQUFzQkEsQ0FDcENMLE1BQXdCLEVBQ3hCTSxjQUFzQixFQUN0QkMsY0FBc0IsRUFDdEJDLFVBQTBCLEVBQzFCO0VBQ0EsT0FBTyxTQUFTQyxxQkFBcUJBLENBQUEsRUFBRztJQUN0QyxJQUFBQyxtQkFBQSxHQUFxQlosa0JBQWtCLENBQUM7UUFBRUssR0FBRyxFQUFFRyxjQUFjO1FBQUVULEdBQUcsRUFBRVU7TUFBZSxDQUFDLEVBQUVQLE1BQU0sQ0FBQztNQUFyRkcsR0FBRyxHQUFBTyxtQkFBQSxDQUFIUCxHQUFHO01BQUVOLEdBQUcsR0FBQWEsbUJBQUEsQ0FBSGIsR0FBRztJQUNoQlcsVUFBVSxDQUFDTCxHQUFHLEVBQUVOLEdBQUcsQ0FBQztFQUN0QixDQUFDO0FBQ0giLCJpZ25vcmVMaXN0IjpbXX0=